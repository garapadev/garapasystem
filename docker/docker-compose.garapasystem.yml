version: '3.8'

services:
  gaparasystem-app:
    image: garapadev/garapasystem:0.3.38.23
    environment:
      DB_HOST: garapasystem-postgres
      DB_PORT: 5432
      DB_NAME: crm_erp
      DB_USER: postgres
      DB_PASSWORD: postgres
      DATABASE_URL: "postgresql://postgres:postgres@garapasystem-postgres:5432/crm_erp?schema=public"
      NEXTAUTH_SECRET: "KmYl85qqhLFfe0VMH+k+bAelK+r1fWcGem+F+beJj+M="
      NEXTAUTH_URL: "http://localhost:3000"
      NODE_ENV: "production"
      PORT: "3000"
      # Configurações específicas do webmail
      WEBMAIL_SECURE: "true"
      WEBMAIL_TLS_REJECT_UNAUTHORIZED: "true"
      WEBMAIL_ENCRYPTION_KEY: "${WEBMAIL_ENCRYPTION_KEY:-default-encryption-key-change-in-production}"
      WEBMAIL_SYNC_INTERVAL: "300"
      WEBMAIL_MAX_ATTACHMENTS_SIZE: "25"
      WEBMAIL_ENABLE_NOTIFICATIONS: "true"
    # Removido depends_on que não funciona no Swarm mode
    # depends_on:
    #   - gaparasystem-postgres
    ports:
      - "3000:3000"
    networks:
      - proxy
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      # Adicionado restart_policy
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      # Adicionado update_config
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      labels:
        - traefik.enable=true
        - traefik.http.routers.gaparasystem-app.rule=Host(`demo.garapasystem.com`)
        - traefik.http.routers.gaparasystem-app.entrypoints=websecure
        - traefik.http.routers.gaparasystem-app.priority=1
        - traefik.http.routers.gaparasystem-app.tls.certresolver=letsencryptresolver
        - traefik.http.routers.gaparasystem-app.service=gaparasystem-app
        - traefik.http.services.gaparasystem-app.loadbalancer.server.port=3000
        - traefik.http.services.gaparasystem-app.loadbalancer.passHostHeader=true
        - traefik.docker.network=proxy

volumes:
  postgres_data:
    driver: local

networks:
  proxy:
    external: true
2025-09-11T10:00:59: node:internal/modules/cjs/loader:1212
2025-09-11T10:00:59:   const err = new Error(message);
2025-09-11T10:00:59:               ^
2025-09-11T10:00:59: 
2025-09-11T10:00:59: Error: Cannot find module '@/lib/prisma'
2025-09-11T10:00:59: Require stack:
2025-09-11T10:00:59: - /app/src/lib/helpdesk/ticket-automation-service.ts
2025-09-11T10:00:59: - /app/src/scripts/start-ticket-automation.ts
2025-09-11T10:00:59:     at Module._resolveFilename (node:internal/modules/cjs/loader:1212:15)
2025-09-11T10:00:59:     at nextResolveSimple (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1004)
2025-09-11T10:00:59:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:2630
2025-09-11T10:00:59:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:1542
2025-09-11T10:00:59:     at resolveTsPaths (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:760)
2025-09-11T10:00:59:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1102
2025-09-11T10:00:59:     at m._resolveFilename (file:///app/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)
2025-09-11T10:00:59:     at Module._load (node:internal/modules/cjs/loader:1043:27)
2025-09-11T10:00:59:     at Module.require (node:internal/modules/cjs/loader:1298:19)
2025-09-11T10:00:59:     at require (node:internal/modules/helpers:182:18) {
2025-09-11T10:00:59:   code: 'MODULE_NOT_FOUND',
2025-09-11T10:00:59:   requireStack: [
2025-09-11T10:00:59:     '/app/src/lib/helpdesk/ticket-automation-service.ts',
2025-09-11T10:00:59:     '/app/src/scripts/start-ticket-automation.ts'
2025-09-11T10:00:59:   ]
2025-09-11T10:00:59: }
2025-09-11T10:00:59: 
2025-09-11T10:00:59: Node.js v20.19.4
2025-09-11T10:01:03: node:internal/modules/cjs/loader:1212
2025-09-11T10:01:03:   const err = new Error(message);
2025-09-11T10:01:03:               ^
2025-09-11T10:01:03: 
2025-09-11T10:01:03: Error: Cannot find module '@/lib/prisma'
2025-09-11T10:01:03: Require stack:
2025-09-11T10:01:03: - /app/src/lib/helpdesk/ticket-automation-service.ts
2025-09-11T10:01:03: - /app/src/scripts/start-ticket-automation.ts
2025-09-11T10:01:03:     at Module._resolveFilename (node:internal/modules/cjs/loader:1212:15)
2025-09-11T10:01:03:     at nextResolveSimple (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1004)
2025-09-11T10:01:03:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:2630
2025-09-11T10:01:03:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:1542
2025-09-11T10:01:03:     at resolveTsPaths (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:760)
2025-09-11T10:01:03:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1102
2025-09-11T10:01:03:     at m._resolveFilename (file:///app/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)
2025-09-11T10:01:03:     at Module._load (node:internal/modules/cjs/loader:1043:27)
2025-09-11T10:01:03:     at Module.require (node:internal/modules/cjs/loader:1298:19)
2025-09-11T10:01:03:     at require (node:internal/modules/helpers:182:18) {
2025-09-11T10:01:03:   code: 'MODULE_NOT_FOUND',
2025-09-11T10:01:03:   requireStack: [
2025-09-11T10:01:03:     '/app/src/lib/helpdesk/ticket-automation-service.ts',
2025-09-11T10:01:03:     '/app/src/scripts/start-ticket-automation.ts'
2025-09-11T10:01:03:   ]
2025-09-11T10:01:03: }
2025-09-11T10:01:03: 
2025-09-11T10:01:03: Node.js v20.19.4
2025-09-11T10:01:08: node:internal/modules/cjs/loader:1212
2025-09-11T10:01:08:   const err = new Error(message);
2025-09-11T10:01:08:               ^
2025-09-11T10:01:08: 
2025-09-11T10:01:08: Error: Cannot find module '@/lib/prisma'
2025-09-11T10:01:08: Require stack:
2025-09-11T10:01:08: - /app/src/lib/helpdesk/ticket-automation-service.ts
2025-09-11T10:01:08: - /app/src/scripts/start-ticket-automation.ts
2025-09-11T10:01:08:     at Module._resolveFilename (node:internal/modules/cjs/loader:1212:15)
2025-09-11T10:01:08:     at nextResolveSimple (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1004)
2025-09-11T10:01:08:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:2630
2025-09-11T10:01:08:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:1542
2025-09-11T10:01:08:     at resolveTsPaths (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:760)
2025-09-11T10:01:08:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1102
2025-09-11T10:01:08:     at m._resolveFilename (file:///app/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)
2025-09-11T10:01:08:     at Module._load (node:internal/modules/cjs/loader:1043:27)
2025-09-11T10:01:08:     at Module.require (node:internal/modules/cjs/loader:1298:19)
2025-09-11T10:01:08:     at require (node:internal/modules/helpers:182:18) {
2025-09-11T10:01:08:   code: 'MODULE_NOT_FOUND',
2025-09-11T10:01:08:   requireStack: [
2025-09-11T10:01:08:     '/app/src/lib/helpdesk/ticket-automation-service.ts',
2025-09-11T10:01:08:     '/app/src/scripts/start-ticket-automation.ts'
2025-09-11T10:01:08:   ]
2025-09-11T10:01:08: }
2025-09-11T10:01:08: 
2025-09-11T10:01:08: Node.js v20.19.4
2025-09-11T10:01:13: node:internal/modules/cjs/loader:1212
2025-09-11T10:01:13:   const err = new Error(message);
2025-09-11T10:01:13:               ^
2025-09-11T10:01:13: 
2025-09-11T10:01:13: Error: Cannot find module '@/lib/prisma'
2025-09-11T10:01:13: Require stack:
2025-09-11T10:01:13: - /app/src/lib/helpdesk/ticket-automation-service.ts
2025-09-11T10:01:13: - /app/src/scripts/start-ticket-automation.ts
2025-09-11T10:01:13:     at Module._resolveFilename (node:internal/modules/cjs/loader:1212:15)
2025-09-11T10:01:13:     at nextResolveSimple (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1004)
2025-09-11T10:01:13:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:2630
2025-09-11T10:01:13:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:1542
2025-09-11T10:01:13:     at resolveTsPaths (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:760)
2025-09-11T10:01:13:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1102
2025-09-11T10:01:13:     at m._resolveFilename (file:///app/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)
2025-09-11T10:01:13:     at Module._load (node:internal/modules/cjs/loader:1043:27)
2025-09-11T10:01:13:     at Module.require (node:internal/modules/cjs/loader:1298:19)
2025-09-11T10:01:13:     at require (node:internal/modules/helpers:182:18) {
2025-09-11T10:01:13:   code: 'MODULE_NOT_FOUND',
2025-09-11T10:01:13:   requireStack: [
2025-09-11T10:01:13:     '/app/src/lib/helpdesk/ticket-automation-service.ts',
2025-09-11T10:01:13:     '/app/src/scripts/start-ticket-automation.ts'
2025-09-11T10:01:13:   ]
2025-09-11T10:01:13: }
2025-09-11T10:01:13: 
2025-09-11T10:01:13: Node.js v20.19.4
2025-09-11T10:01:18: node:internal/modules/cjs/loader:1212
2025-09-11T10:01:18:   const err = new Error(message);
2025-09-11T10:01:18:               ^
2025-09-11T10:01:18: 
2025-09-11T10:01:18: Error: Cannot find module '@/lib/prisma'
2025-09-11T10:01:18: Require stack:
2025-09-11T10:01:18: - /app/src/lib/helpdesk/ticket-automation-service.ts
2025-09-11T10:01:18: - /app/src/scripts/start-ticket-automation.ts
2025-09-11T10:01:18:     at Module._resolveFilename (node:internal/modules/cjs/loader:1212:15)
2025-09-11T10:01:18:     at nextResolveSimple (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1004)
2025-09-11T10:01:18:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:2630
2025-09-11T10:01:18:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:1542
2025-09-11T10:01:18:     at resolveTsPaths (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:760)
2025-09-11T10:01:18:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1102
2025-09-11T10:01:18:     at m._resolveFilename (file:///app/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)
2025-09-11T10:01:18:     at Module._load (node:internal/modules/cjs/loader:1043:27)
2025-09-11T10:01:18:     at Module.require (node:internal/modules/cjs/loader:1298:19)
2025-09-11T10:01:18:     at require (node:internal/modules/helpers:182:18) {
2025-09-11T10:01:18:   code: 'MODULE_NOT_FOUND',
2025-09-11T10:01:18:   requireStack: [
2025-09-11T10:01:18:     '/app/src/lib/helpdesk/ticket-automation-service.ts',
2025-09-11T10:01:18:     '/app/src/scripts/start-ticket-automation.ts'
2025-09-11T10:01:18:   ]
2025-09-11T10:01:18: }
2025-09-11T10:01:18: 
2025-09-11T10:01:18: Node.js v20.19.4
2025-09-11T10:01:23: node:internal/modules/cjs/loader:1212
2025-09-11T10:01:23:   const err = new Error(message);
2025-09-11T10:01:23:               ^
2025-09-11T10:01:23: 
2025-09-11T10:01:23: Error: Cannot find module '@/lib/prisma'
2025-09-11T10:01:23: Require stack:
2025-09-11T10:01:23: - /app/src/lib/helpdesk/ticket-automation-service.ts
2025-09-11T10:01:23: - /app/src/scripts/start-ticket-automation.ts
2025-09-11T10:01:23:     at Module._resolveFilename (node:internal/modules/cjs/loader:1212:15)
2025-09-11T10:01:23:     at nextResolveSimple (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1004)
2025-09-11T10:01:23:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:2630
2025-09-11T10:01:23:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:1542
2025-09-11T10:01:23:     at resolveTsPaths (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:760)
2025-09-11T10:01:23:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1102
2025-09-11T10:01:23:     at m._resolveFilename (file:///app/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)
2025-09-11T10:01:23:     at Module._load (node:internal/modules/cjs/loader:1043:27)
2025-09-11T10:01:23:     at Module.require (node:internal/modules/cjs/loader:1298:19)
2025-09-11T10:01:23:     at require (node:internal/modules/helpers:182:18) {
2025-09-11T10:01:23:   code: 'MODULE_NOT_FOUND',
2025-09-11T10:01:23:   requireStack: [
2025-09-11T10:01:23:     '/app/src/lib/helpdesk/ticket-automation-service.ts',
2025-09-11T10:01:23:     '/app/src/scripts/start-ticket-automation.ts'
2025-09-11T10:01:23:   ]
2025-09-11T10:01:23: }
2025-09-11T10:01:23: 
2025-09-11T10:01:23: Node.js v20.19.4
2025-09-11T10:01:27: node:internal/modules/cjs/loader:1212
2025-09-11T10:01:27:   const err = new Error(message);
2025-09-11T10:01:27:               ^
2025-09-11T10:01:27: 
2025-09-11T10:01:27: Error: Cannot find module '@/lib/prisma'
2025-09-11T10:01:27: Require stack:
2025-09-11T10:01:27: - /app/src/lib/helpdesk/ticket-automation-service.ts
2025-09-11T10:01:27: - /app/src/scripts/start-ticket-automation.ts
2025-09-11T10:01:27:     at Module._resolveFilename (node:internal/modules/cjs/loader:1212:15)
2025-09-11T10:01:27:     at nextResolveSimple (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1004)
2025-09-11T10:01:27:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:2630
2025-09-11T10:01:27:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:1542
2025-09-11T10:01:27:     at resolveTsPaths (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:760)
2025-09-11T10:01:27:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1102
2025-09-11T10:01:27:     at m._resolveFilename (file:///app/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)
2025-09-11T10:01:27:     at Module._load (node:internal/modules/cjs/loader:1043:27)
2025-09-11T10:01:27:     at Module.require (node:internal/modules/cjs/loader:1298:19)
2025-09-11T10:01:27:     at require (node:internal/modules/helpers:182:18) {
2025-09-11T10:01:27:   code: 'MODULE_NOT_FOUND',
2025-09-11T10:01:27:   requireStack: [
2025-09-11T10:01:27:     '/app/src/lib/helpdesk/ticket-automation-service.ts',
2025-09-11T10:01:27:     '/app/src/scripts/start-ticket-automation.ts'
2025-09-11T10:01:27:   ]
2025-09-11T10:01:27: }
2025-09-11T10:01:27: 
2025-09-11T10:01:27: Node.js v20.19.4
2025-09-11T10:01:32: node:internal/modules/cjs/loader:1212
2025-09-11T10:01:32:   const err = new Error(message);
2025-09-11T10:01:32:               ^
2025-09-11T10:01:32: 
2025-09-11T10:01:32: Error: Cannot find module '@/lib/prisma'
2025-09-11T10:01:32: Require stack:
2025-09-11T10:01:32: - /app/src/lib/helpdesk/ticket-automation-service.ts
2025-09-11T10:01:32: - /app/src/scripts/start-ticket-automation.ts
2025-09-11T10:01:32:     at Module._resolveFilename (node:internal/modules/cjs/loader:1212:15)
2025-09-11T10:01:32:     at nextResolveSimple (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1004)
2025-09-11T10:01:32:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:2630
2025-09-11T10:01:32:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:1542
2025-09-11T10:01:32:     at resolveTsPaths (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:760)
2025-09-11T10:01:32:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1102
2025-09-11T10:01:32:     at m._resolveFilename (file:///app/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)
2025-09-11T10:01:32:     at Module._load (node:internal/modules/cjs/loader:1043:27)
2025-09-11T10:01:32:     at Module.require (node:internal/modules/cjs/loader:1298:19)
2025-09-11T10:01:32:     at require (node:internal/modules/helpers:182:18) {
2025-09-11T10:01:32:   code: 'MODULE_NOT_FOUND',
2025-09-11T10:01:32:   requireStack: [
2025-09-11T10:01:32:     '/app/src/lib/helpdesk/ticket-automation-service.ts',
2025-09-11T10:01:32:     '/app/src/scripts/start-ticket-automation.ts'
2025-09-11T10:01:32:   ]
2025-09-11T10:01:32: }
2025-09-11T10:01:32: 
2025-09-11T10:01:32: Node.js v20.19.4
2025-09-11T10:01:37: node:internal/modules/cjs/loader:1212
2025-09-11T10:01:37:   const err = new Error(message);
2025-09-11T10:01:37:               ^
2025-09-11T10:01:37: 
2025-09-11T10:01:37: Error: Cannot find module '@/lib/prisma'
2025-09-11T10:01:37: Require stack:
2025-09-11T10:01:37: - /app/src/lib/helpdesk/ticket-automation-service.ts
2025-09-11T10:01:37: - /app/src/scripts/start-ticket-automation.ts
2025-09-11T10:01:37:     at Module._resolveFilename (node:internal/modules/cjs/loader:1212:15)
2025-09-11T10:01:37:     at nextResolveSimple (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1004)
2025-09-11T10:01:37:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:2630
2025-09-11T10:01:37:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:1542
2025-09-11T10:01:37:     at resolveTsPaths (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:760)
2025-09-11T10:01:37:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1102
2025-09-11T10:01:37:     at m._resolveFilename (file:///app/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)
2025-09-11T10:01:37:     at Module._load (node:internal/modules/cjs/loader:1043:27)
2025-09-11T10:01:37:     at Module.require (node:internal/modules/cjs/loader:1298:19)
2025-09-11T10:01:37:     at require (node:internal/modules/helpers:182:18) {
2025-09-11T10:01:37:   code: 'MODULE_NOT_FOUND',
2025-09-11T10:01:37:   requireStack: [
2025-09-11T10:01:37:     '/app/src/lib/helpdesk/ticket-automation-service.ts',
2025-09-11T10:01:37:     '/app/src/scripts/start-ticket-automation.ts'
2025-09-11T10:01:37:   ]
2025-09-11T10:01:37: }
2025-09-11T10:01:37: 
2025-09-11T10:01:37: Node.js v20.19.4
2025-09-11T10:01:42: node:internal/modules/cjs/loader:1212
2025-09-11T10:01:42:   const err = new Error(message);
2025-09-11T10:01:42:               ^
2025-09-11T10:01:42: 
2025-09-11T10:01:42: Error: Cannot find module '../prisma'
2025-09-11T10:01:42: Require stack:
2025-09-11T10:01:42: - /app/src/lib/helpdesk/ticket-automation-service.ts
2025-09-11T10:01:42: - /app/src/scripts/start-ticket-automation.ts
2025-09-11T10:01:42:     at Module._resolveFilename (node:internal/modules/cjs/loader:1212:15)
2025-09-11T10:01:42:     at nextResolveSimple (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1004)
2025-09-11T10:01:42:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:2630
2025-09-11T10:01:42:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:3:1542
2025-09-11T10:01:42:     at resolveTsPaths (/app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:760)
2025-09-11T10:01:42:     at /app/node_modules/tsx/dist/register-D46fvsV_.cjs:4:1102
2025-09-11T10:01:42:     at m._resolveFilename (file:///app/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)
2025-09-11T10:01:42:     at Module._load (node:internal/modules/cjs/loader:1043:27)
2025-09-11T10:01:42:     at Module.require (node:internal/modules/cjs/loader:1298:19)
2025-09-11T10:01:42:     at require (node:internal/modules/helpers:182:18) {
2025-09-11T10:01:42:   code: 'MODULE_NOT_FOUND',
2025-09-11T10:01:42:   requireStack: [
2025-09-11T10:01:42:     '/app/src/lib/helpdesk/ticket-automation-service.ts',
2025-09-11T10:01:42:     '/app/src/scripts/start-ticket-automation.ts'
2025-09-11T10:01:42:   ]
2025-09-11T10:01:42: }
2025-09-11T10:01:42: 
2025-09-11T10:01:42: Node.js v20.19.4
2025-09-11T10:02:38: ❌ Erro ao iniciar serviço: PrismaClientValidationError: 
2025-09-11T10:02:38: Invalid `db.helpdeskDepartamento.count()` invocation in
2025-09-11T10:02:38: /app/src/scripts/start-ticket-automation.ts:19:57
2025-09-11T10:02:38: 
2025-09-11T10:02:38:   16 console.log('✅ Conexão com banco de dados estabelecida');
2025-09-11T10:02:38:   17 
2025-09-11T10:02:38:   18 // Verificar se existem departamentos configurados
2025-09-11T10:02:38: → 19 const departamentos = await db.helpdeskDepartamento.count({
2025-09-11T10:02:38:        select: {
2025-09-11T10:02:38:          _count: {
2025-09-11T10:02:38:            select: {
2025-09-11T10:02:38:              _all: true
2025-09-11T10:02:38:            }
2025-09-11T10:02:38:          }
2025-09-11T10:02:38:        },
2025-09-11T10:02:38:        where: {
2025-09-11T10:02:38:          imapEnabled: true,
2025-09-11T10:02:38:          ~~~~~~~~~~~
2025-09-11T10:02:38:          AND: [
2025-09-11T10:02:38:            {
2025-09-11T10:02:38:              imapHost: {
2025-09-11T10:02:38:                not: null
2025-09-11T10:02:38:              }
2025-09-11T10:02:38:            },
2025-09-11T10:02:38:            {
2025-09-11T10:02:38:              imapPort: {
2025-09-11T10:02:38:                not: null
2025-09-11T10:02:38:              }
2025-09-11T10:02:38:            },
2025-09-11T10:02:38:            {
2025-09-11T10:02:38:              imapUsername: {
2025-09-11T10:02:38:                not: null
2025-09-11T10:02:38:              }
2025-09-11T10:02:38:            },
2025-09-11T10:02:38:            {
2025-09-11T10:02:38:              imapPassword: {
2025-09-11T10:02:38:                not: null
2025-09-11T10:02:38:              }
2025-09-11T10:02:38:            }
2025-09-11T10:02:38:          ],
2025-09-11T10:02:38:      ?   OR?: HelpdeskDepartamentoWhereInput[],
2025-09-11T10:02:38:      ?   NOT?: HelpdeskDepartamentoWhereInput | HelpdeskDepartamentoWhereInput[],
2025-09-11T10:02:38:      ?   id?: StringFilter | String,
2025-09-11T10:02:38:      ?   nome?: StringFilter | String,
2025-09-11T10:02:38:      ?   descricao?: StringNullableFilter | String | Null,
2025-09-11T10:02:38:      ?   ativo?: BoolFilter | Boolean,
2025-09-11T10:02:38:      ?   imapHost?: StringNullableFilter | String | Null,
2025-09-11T10:02:38:      ?   imapPort?: IntNullableFilter | Int | Null,
2025-09-11T10:02:38:      ?   imapSecure?: BoolFilter | Boolean,
2025-09-11T10:02:38:      ?   imapEmail?: StringNullableFilter | String | Null,
2025-09-11T10:02:38:      ?   imapPassword?: StringNullableFilter | String | Null,
2025-09-11T10:02:38:      ?   smtpHost?: StringNullableFilter | String | Null,
2025-09-11T10:02:38:      ?   smtpPort?: IntNullableFilter | Int | Null,
2025-09-11T10:02:38:      ?   smtpSecure?: BoolFilter | Boolean,
2025-09-11T10:02:38:      ?   smtpEmail?: StringNullableFilter | String | Null,
2025-09-11T10:02:38:      ?   smtpPassword?: StringNullableFilter | String | Null,
2025-09-11T10:02:38:      ?   syncEnabled?: BoolFilter | Boolean,
2025-09-11T10:02:38:      ?   syncInterval?: IntFilter | Int,
2025-09-11T10:02:38:      ?   lastSync?: DateTimeNullableFilter | DateTime | Null,
2025-09-11T10:02:38:      ?   createdAt?: DateTimeFilter | DateTime,
2025-09-11T10:02:38:      ?   updatedAt?: DateTimeFilter | DateTime,
2025-09-11T10:02:38:      ?   grupoHierarquicoId?: StringNullableFilter | String | Null,
2025-09-11T10:02:38:      ?   grupoHierarquico?: GrupoHierarquicoNullableScalarRelationFilter | GrupoHierarquicoWhereInput | Null,
2025-09-11T10:02:38:      ?   tickets?: HelpdeskTicketListRelationFilter
2025-09-11T10:02:38:        }
2025-09-11T10:02:38:      })
2025-09-11T10:02:38: 
2025-09-11T10:02:38: Unknown argument `imapEnabled`. Available options are marked with ?.
2025-09-11T10:02:38:     at throwValidationException (/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
2025-09-11T10:02:38:     at ei.handleRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
2025-09-11T10:02:38:     at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
2025-09-11T10:02:38:     at ei.request (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
2025-09-11T10:02:38:     at async a (/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-09-11T10:02:38:     at async main (/app/src/scripts/start-ticket-automation.ts:19:27) {
2025-09-11T10:02:38:   clientVersion: '6.15.0'
2025-09-11T10:02:38: }
2025-09-11T10:02:43: ❌ Erro ao iniciar serviço: PrismaClientValidationError: 
2025-09-11T10:02:43: Invalid `db.helpdeskDepartamento.count()` invocation in
2025-09-11T10:02:43: /app/src/scripts/start-ticket-automation.ts:19:57
2025-09-11T10:02:43: 
2025-09-11T10:02:43:   16 console.log('✅ Conexão com banco de dados estabelecida');
2025-09-11T10:02:43:   17 
2025-09-11T10:02:43:   18 // Verificar se existem departamentos configurados
2025-09-11T10:02:43: → 19 const departamentos = await db.helpdeskDepartamento.count({
2025-09-11T10:02:43:        select: {
2025-09-11T10:02:43:          _count: {
2025-09-11T10:02:43:            select: {
2025-09-11T10:02:43:              _all: true
2025-09-11T10:02:43:            }
2025-09-11T10:02:43:          }
2025-09-11T10:02:43:        },
2025-09-11T10:02:43:        where: {
2025-09-11T10:02:43:          imapEnabled: true,
2025-09-11T10:02:43:          ~~~~~~~~~~~
2025-09-11T10:02:43:          AND: [
2025-09-11T10:02:43:            {
2025-09-11T10:02:43:              imapHost: {
2025-09-11T10:02:43:                not: null
2025-09-11T10:02:43:              }
2025-09-11T10:02:43:            },
2025-09-11T10:02:43:            {
2025-09-11T10:02:43:              imapPort: {
2025-09-11T10:02:43:                not: null
2025-09-11T10:02:43:              }
2025-09-11T10:02:43:            },
2025-09-11T10:02:43:            {
2025-09-11T10:02:43:              imapUsername: {
2025-09-11T10:02:43:                not: null
2025-09-11T10:02:43:              }
2025-09-11T10:02:43:            },
2025-09-11T10:02:43:            {
2025-09-11T10:02:43:              imapPassword: {
2025-09-11T10:02:43:                not: null
2025-09-11T10:02:43:              }
2025-09-11T10:02:43:            }
2025-09-11T10:02:43:          ],
2025-09-11T10:02:43:      ?   OR?: HelpdeskDepartamentoWhereInput[],
2025-09-11T10:02:43:      ?   NOT?: HelpdeskDepartamentoWhereInput | HelpdeskDepartamentoWhereInput[],
2025-09-11T10:02:43:      ?   id?: StringFilter | String,
2025-09-11T10:02:43:      ?   nome?: StringFilter | String,
2025-09-11T10:02:43:      ?   descricao?: StringNullableFilter | String | Null,
2025-09-11T10:02:43:      ?   ativo?: BoolFilter | Boolean,
2025-09-11T10:02:43:      ?   imapHost?: StringNullableFilter | String | Null,
2025-09-11T10:02:43:      ?   imapPort?: IntNullableFilter | Int | Null,
2025-09-11T10:02:43:      ?   imapSecure?: BoolFilter | Boolean,
2025-09-11T10:02:43:      ?   imapEmail?: StringNullableFilter | String | Null,
2025-09-11T10:02:43:      ?   imapPassword?: StringNullableFilter | String | Null,
2025-09-11T10:02:43:      ?   smtpHost?: StringNullableFilter | String | Null,
2025-09-11T10:02:43:      ?   smtpPort?: IntNullableFilter | Int | Null,
2025-09-11T10:02:43:      ?   smtpSecure?: BoolFilter | Boolean,
2025-09-11T10:02:43:      ?   smtpEmail?: StringNullableFilter | String | Null,
2025-09-11T10:02:43:      ?   smtpPassword?: StringNullableFilter | String | Null,
2025-09-11T10:02:43:      ?   syncEnabled?: BoolFilter | Boolean,
2025-09-11T10:02:43:      ?   syncInterval?: IntFilter | Int,
2025-09-11T10:02:43:      ?   lastSync?: DateTimeNullableFilter | DateTime | Null,
2025-09-11T10:02:43:      ?   createdAt?: DateTimeFilter | DateTime,
2025-09-11T10:02:43:      ?   updatedAt?: DateTimeFilter | DateTime,
2025-09-11T10:02:43:      ?   grupoHierarquicoId?: StringNullableFilter | String | Null,
2025-09-11T10:02:43:      ?   grupoHierarquico?: GrupoHierarquicoNullableScalarRelationFilter | GrupoHierarquicoWhereInput | Null,
2025-09-11T10:02:43:      ?   tickets?: HelpdeskTicketListRelationFilter
2025-09-11T10:02:43:        }
2025-09-11T10:02:43:      })
2025-09-11T10:02:43: 
2025-09-11T10:02:43: Unknown argument `imapEnabled`. Available options are marked with ?.
2025-09-11T10:02:43:     at throwValidationException (/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
2025-09-11T10:02:43:     at ei.handleRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
2025-09-11T10:02:43:     at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
2025-09-11T10:02:43:     at ei.request (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
2025-09-11T10:02:43:     at async a (/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-09-11T10:02:43:     at async main (/app/src/scripts/start-ticket-automation.ts:19:27) {
2025-09-11T10:02:43:   clientVersion: '6.15.0'
2025-09-11T10:02:43: }
2025-09-11T10:02:48: ❌ Erro ao iniciar serviço: PrismaClientValidationError: 
2025-09-11T10:02:48: Invalid `db.helpdeskDepartamento.count()` invocation in
2025-09-11T10:02:48: /app/src/scripts/start-ticket-automation.ts:19:57
2025-09-11T10:02:48: 
2025-09-11T10:02:48:   16 console.log('✅ Conexão com banco de dados estabelecida');
2025-09-11T10:02:48:   17 
2025-09-11T10:02:48:   18 // Verificar se existem departamentos configurados
2025-09-11T10:02:48: → 19 const departamentos = await db.helpdeskDepartamento.count({
2025-09-11T10:02:48:        select: {
2025-09-11T10:02:48:          _count: {
2025-09-11T10:02:48:            select: {
2025-09-11T10:02:48:              _all: true
2025-09-11T10:02:48:            }
2025-09-11T10:02:48:          }
2025-09-11T10:02:48:        },
2025-09-11T10:02:48:        where: {
2025-09-11T10:02:48:          imapEnabled: true,
2025-09-11T10:02:48:          ~~~~~~~~~~~
2025-09-11T10:02:48:          AND: [
2025-09-11T10:02:48:            {
2025-09-11T10:02:48:              imapHost: {
2025-09-11T10:02:48:                not: null
2025-09-11T10:02:48:              }
2025-09-11T10:02:48:            },
2025-09-11T10:02:48:            {
2025-09-11T10:02:48:              imapPort: {
2025-09-11T10:02:48:                not: null
2025-09-11T10:02:48:              }
2025-09-11T10:02:48:            },
2025-09-11T10:02:48:            {
2025-09-11T10:02:48:              imapUsername: {
2025-09-11T10:02:48:                not: null
2025-09-11T10:02:48:              }
2025-09-11T10:02:48:            },
2025-09-11T10:02:48:            {
2025-09-11T10:02:48:              imapPassword: {
2025-09-11T10:02:48:                not: null
2025-09-11T10:02:48:              }
2025-09-11T10:02:48:            }
2025-09-11T10:02:48:          ],
2025-09-11T10:02:48:      ?   OR?: HelpdeskDepartamentoWhereInput[],
2025-09-11T10:02:48:      ?   NOT?: HelpdeskDepartamentoWhereInput | HelpdeskDepartamentoWhereInput[],
2025-09-11T10:02:48:      ?   id?: StringFilter | String,
2025-09-11T10:02:48:      ?   nome?: StringFilter | String,
2025-09-11T10:02:48:      ?   descricao?: StringNullableFilter | String | Null,
2025-09-11T10:02:48:      ?   ativo?: BoolFilter | Boolean,
2025-09-11T10:02:48:      ?   imapHost?: StringNullableFilter | String | Null,
2025-09-11T10:02:48:      ?   imapPort?: IntNullableFilter | Int | Null,
2025-09-11T10:02:48:      ?   imapSecure?: BoolFilter | Boolean,
2025-09-11T10:02:48:      ?   imapEmail?: StringNullableFilter | String | Null,
2025-09-11T10:02:48:      ?   imapPassword?: StringNullableFilter | String | Null,
2025-09-11T10:02:48:      ?   smtpHost?: StringNullableFilter | String | Null,
2025-09-11T10:02:48:      ?   smtpPort?: IntNullableFilter | Int | Null,
2025-09-11T10:02:48:      ?   smtpSecure?: BoolFilter | Boolean,
2025-09-11T10:02:48:      ?   smtpEmail?: StringNullableFilter | String | Null,
2025-09-11T10:02:48:      ?   smtpPassword?: StringNullableFilter | String | Null,
2025-09-11T10:02:48:      ?   syncEnabled?: BoolFilter | Boolean,
2025-09-11T10:02:48:      ?   syncInterval?: IntFilter | Int,
2025-09-11T10:02:48:      ?   lastSync?: DateTimeNullableFilter | DateTime | Null,
2025-09-11T10:02:48:      ?   createdAt?: DateTimeFilter | DateTime,
2025-09-11T10:02:48:      ?   updatedAt?: DateTimeFilter | DateTime,
2025-09-11T10:02:48:      ?   grupoHierarquicoId?: StringNullableFilter | String | Null,
2025-09-11T10:02:48:      ?   grupoHierarquico?: GrupoHierarquicoNullableScalarRelationFilter | GrupoHierarquicoWhereInput | Null,
2025-09-11T10:02:48:      ?   tickets?: HelpdeskTicketListRelationFilter
2025-09-11T10:02:48:        }
2025-09-11T10:02:48:      })
2025-09-11T10:02:48: 
2025-09-11T10:02:48: Unknown argument `imapEnabled`. Available options are marked with ?.
2025-09-11T10:02:48:     at throwValidationException (/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
2025-09-11T10:02:48:     at ei.handleRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
2025-09-11T10:02:48:     at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
2025-09-11T10:02:48:     at ei.request (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
2025-09-11T10:02:48:     at async a (/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-09-11T10:02:48:     at async main (/app/src/scripts/start-ticket-automation.ts:19:27) {
2025-09-11T10:02:48:   clientVersion: '6.15.0'
2025-09-11T10:02:48: }
2025-09-11T10:02:53: ❌ Erro ao iniciar serviço: PrismaClientValidationError: 
2025-09-11T10:02:53: Invalid `db.helpdeskDepartamento.count()` invocation in
2025-09-11T10:02:53: /app/src/scripts/start-ticket-automation.ts:19:57
2025-09-11T10:02:53: 
2025-09-11T10:02:53:   16 console.log('✅ Conexão com banco de dados estabelecida');
2025-09-11T10:02:53:   17 
2025-09-11T10:02:53:   18 // Verificar se existem departamentos configurados
2025-09-11T10:02:53: → 19 const departamentos = await db.helpdeskDepartamento.count({
2025-09-11T10:02:53:        select: {
2025-09-11T10:02:53:          _count: {
2025-09-11T10:02:53:            select: {
2025-09-11T10:02:53:              _all: true
2025-09-11T10:02:53:            }
2025-09-11T10:02:53:          }
2025-09-11T10:02:53:        },
2025-09-11T10:02:53:        where: {
2025-09-11T10:02:53:          imapEnabled: true,
2025-09-11T10:02:53:          ~~~~~~~~~~~
2025-09-11T10:02:53:          AND: [
2025-09-11T10:02:53:            {
2025-09-11T10:02:53:              imapHost: {
2025-09-11T10:02:53:                not: null
2025-09-11T10:02:53:              }
2025-09-11T10:02:53:            },
2025-09-11T10:02:53:            {
2025-09-11T10:02:53:              imapPort: {
2025-09-11T10:02:53:                not: null
2025-09-11T10:02:53:              }
2025-09-11T10:02:53:            },
2025-09-11T10:02:53:            {
2025-09-11T10:02:53:              imapUsername: {
2025-09-11T10:02:53:                not: null
2025-09-11T10:02:53:              }
2025-09-11T10:02:53:            },
2025-09-11T10:02:53:            {
2025-09-11T10:02:53:              imapPassword: {
2025-09-11T10:02:53:                not: null
2025-09-11T10:02:53:              }
2025-09-11T10:02:53:            }
2025-09-11T10:02:53:          ],
2025-09-11T10:02:53:      ?   OR?: HelpdeskDepartamentoWhereInput[],
2025-09-11T10:02:53:      ?   NOT?: HelpdeskDepartamentoWhereInput | HelpdeskDepartamentoWhereInput[],
2025-09-11T10:02:53:      ?   id?: StringFilter | String,
2025-09-11T10:02:53:      ?   nome?: StringFilter | String,
2025-09-11T10:02:53:      ?   descricao?: StringNullableFilter | String | Null,
2025-09-11T10:02:53:      ?   ativo?: BoolFilter | Boolean,
2025-09-11T10:02:53:      ?   imapHost?: StringNullableFilter | String | Null,
2025-09-11T10:02:53:      ?   imapPort?: IntNullableFilter | Int | Null,
2025-09-11T10:02:53:      ?   imapSecure?: BoolFilter | Boolean,
2025-09-11T10:02:53:      ?   imapEmail?: StringNullableFilter | String | Null,
2025-09-11T10:02:53:      ?   imapPassword?: StringNullableFilter | String | Null,
2025-09-11T10:02:53:      ?   smtpHost?: StringNullableFilter | String | Null,
2025-09-11T10:02:53:      ?   smtpPort?: IntNullableFilter | Int | Null,
2025-09-11T10:02:53:      ?   smtpSecure?: BoolFilter | Boolean,
2025-09-11T10:02:53:      ?   smtpEmail?: StringNullableFilter | String | Null,
2025-09-11T10:02:53:      ?   smtpPassword?: StringNullableFilter | String | Null,
2025-09-11T10:02:53:      ?   syncEnabled?: BoolFilter | Boolean,
2025-09-11T10:02:53:      ?   syncInterval?: IntFilter | Int,
2025-09-11T10:02:53:      ?   lastSync?: DateTimeNullableFilter | DateTime | Null,
2025-09-11T10:02:53:      ?   createdAt?: DateTimeFilter | DateTime,
2025-09-11T10:02:53:      ?   updatedAt?: DateTimeFilter | DateTime,
2025-09-11T10:02:53:      ?   grupoHierarquicoId?: StringNullableFilter | String | Null,
2025-09-11T10:02:53:      ?   grupoHierarquico?: GrupoHierarquicoNullableScalarRelationFilter | GrupoHierarquicoWhereInput | Null,
2025-09-11T10:02:53:      ?   tickets?: HelpdeskTicketListRelationFilter
2025-09-11T10:02:53:        }
2025-09-11T10:02:53:      })
2025-09-11T10:02:53: 
2025-09-11T10:02:53: Unknown argument `imapEnabled`. Available options are marked with ?.
2025-09-11T10:02:53:     at throwValidationException (/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
2025-09-11T10:02:53:     at ei.handleRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
2025-09-11T10:02:53:     at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
2025-09-11T10:02:53:     at ei.request (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
2025-09-11T10:02:53:     at async a (/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-09-11T10:02:53:     at async main (/app/src/scripts/start-ticket-automation.ts:19:27) {
2025-09-11T10:02:53:   clientVersion: '6.15.0'
2025-09-11T10:02:53: }
2025-09-11T10:02:58: ❌ Erro ao iniciar serviço: PrismaClientValidationError: 
2025-09-11T10:02:58: Invalid `db.helpdeskDepartamento.count()` invocation in
2025-09-11T10:02:58: /app/src/scripts/start-ticket-automation.ts:19:57
2025-09-11T10:02:58: 
2025-09-11T10:02:58:   16 console.log('✅ Conexão com banco de dados estabelecida');
2025-09-11T10:02:58:   17 
2025-09-11T10:02:58:   18 // Verificar se existem departamentos configurados
2025-09-11T10:02:58: → 19 const departamentos = await db.helpdeskDepartamento.count({
2025-09-11T10:02:58:        select: {
2025-09-11T10:02:58:          _count: {
2025-09-11T10:02:58:            select: {
2025-09-11T10:02:58:              _all: true
2025-09-11T10:02:58:            }
2025-09-11T10:02:58:          }
2025-09-11T10:02:58:        },
2025-09-11T10:02:58:        where: {
2025-09-11T10:02:58:          imapEnabled: true,
2025-09-11T10:02:58:          ~~~~~~~~~~~
2025-09-11T10:02:58:          AND: [
2025-09-11T10:02:58:            {
2025-09-11T10:02:58:              imapHost: {
2025-09-11T10:02:58:                not: null
2025-09-11T10:02:58:              }
2025-09-11T10:02:58:            },
2025-09-11T10:02:58:            {
2025-09-11T10:02:58:              imapPort: {
2025-09-11T10:02:58:                not: null
2025-09-11T10:02:58:              }
2025-09-11T10:02:58:            },
2025-09-11T10:02:58:            {
2025-09-11T10:02:58:              imapUsername: {
2025-09-11T10:02:58:                not: null
2025-09-11T10:02:58:              }
2025-09-11T10:02:58:            },
2025-09-11T10:02:58:            {
2025-09-11T10:02:58:              imapPassword: {
2025-09-11T10:02:58:                not: null
2025-09-11T10:02:58:              }
2025-09-11T10:02:58:            }
2025-09-11T10:02:58:          ],
2025-09-11T10:02:58:      ?   OR?: HelpdeskDepartamentoWhereInput[],
2025-09-11T10:02:58:      ?   NOT?: HelpdeskDepartamentoWhereInput | HelpdeskDepartamentoWhereInput[],
2025-09-11T10:02:58:      ?   id?: StringFilter | String,
2025-09-11T10:02:58:      ?   nome?: StringFilter | String,
2025-09-11T10:02:58:      ?   descricao?: StringNullableFilter | String | Null,
2025-09-11T10:02:58:      ?   ativo?: BoolFilter | Boolean,
2025-09-11T10:02:58:      ?   imapHost?: StringNullableFilter | String | Null,
2025-09-11T10:02:58:      ?   imapPort?: IntNullableFilter | Int | Null,
2025-09-11T10:02:58:      ?   imapSecure?: BoolFilter | Boolean,
2025-09-11T10:02:58:      ?   imapEmail?: StringNullableFilter | String | Null,
2025-09-11T10:02:58:      ?   imapPassword?: StringNullableFilter | String | Null,
2025-09-11T10:02:58:      ?   smtpHost?: StringNullableFilter | String | Null,
2025-09-11T10:02:58:      ?   smtpPort?: IntNullableFilter | Int | Null,
2025-09-11T10:02:58:      ?   smtpSecure?: BoolFilter | Boolean,
2025-09-11T10:02:58:      ?   smtpEmail?: StringNullableFilter | String | Null,
2025-09-11T10:02:58:      ?   smtpPassword?: StringNullableFilter | String | Null,
2025-09-11T10:02:58:      ?   syncEnabled?: BoolFilter | Boolean,
2025-09-11T10:02:58:      ?   syncInterval?: IntFilter | Int,
2025-09-11T10:02:58:      ?   lastSync?: DateTimeNullableFilter | DateTime | Null,
2025-09-11T10:02:58:      ?   createdAt?: DateTimeFilter | DateTime,
2025-09-11T10:02:58:      ?   updatedAt?: DateTimeFilter | DateTime,
2025-09-11T10:02:58:      ?   grupoHierarquicoId?: StringNullableFilter | String | Null,
2025-09-11T10:02:58:      ?   grupoHierarquico?: GrupoHierarquicoNullableScalarRelationFilter | GrupoHierarquicoWhereInput | Null,
2025-09-11T10:02:58:      ?   tickets?: HelpdeskTicketListRelationFilter
2025-09-11T10:02:58:        }
2025-09-11T10:02:58:      })
2025-09-11T10:02:58: 
2025-09-11T10:02:58: Unknown argument `imapEnabled`. Available options are marked with ?.
2025-09-11T10:02:58:     at throwValidationException (/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
2025-09-11T10:02:58:     at ei.handleRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
2025-09-11T10:02:58:     at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
2025-09-11T10:02:58:     at ei.request (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
2025-09-11T10:02:58:     at async a (/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-09-11T10:02:58:     at async main (/app/src/scripts/start-ticket-automation.ts:19:27) {
2025-09-11T10:02:58:   clientVersion: '6.15.0'
2025-09-11T10:02:58: }
2025-09-11T10:03:03: ❌ Erro ao iniciar serviço: PrismaClientValidationError: 
2025-09-11T10:03:03: Invalid `db.helpdeskDepartamento.count()` invocation in
2025-09-11T10:03:03: /app/src/scripts/start-ticket-automation.ts:19:57
2025-09-11T10:03:03: 
2025-09-11T10:03:03:   16 console.log('✅ Conexão com banco de dados estabelecida');
2025-09-11T10:03:03:   17 
2025-09-11T10:03:03:   18 // Verificar se existem departamentos configurados
2025-09-11T10:03:03: → 19 const departamentos = await db.helpdeskDepartamento.count({
2025-09-11T10:03:03:        select: {
2025-09-11T10:03:03:          _count: {
2025-09-11T10:03:03:            select: {
2025-09-11T10:03:03:              _all: true
2025-09-11T10:03:03:            }
2025-09-11T10:03:03:          }
2025-09-11T10:03:03:        },
2025-09-11T10:03:03:        where: {
2025-09-11T10:03:03:          imapEnabled: true,
2025-09-11T10:03:03:          ~~~~~~~~~~~
2025-09-11T10:03:03:          AND: [
2025-09-11T10:03:03:            {
2025-09-11T10:03:03:              imapHost: {
2025-09-11T10:03:03:                not: null
2025-09-11T10:03:03:              }
2025-09-11T10:03:03:            },
2025-09-11T10:03:03:            {
2025-09-11T10:03:03:              imapPort: {
2025-09-11T10:03:03:                not: null
2025-09-11T10:03:03:              }
2025-09-11T10:03:03:            },
2025-09-11T10:03:03:            {
2025-09-11T10:03:03:              imapUsername: {
2025-09-11T10:03:03:                not: null
2025-09-11T10:03:03:              }
2025-09-11T10:03:03:            },
2025-09-11T10:03:03:            {
2025-09-11T10:03:03:              imapPassword: {
2025-09-11T10:03:03:                not: null
2025-09-11T10:03:03:              }
2025-09-11T10:03:03:            }
2025-09-11T10:03:03:          ],
2025-09-11T10:03:03:      ?   OR?: HelpdeskDepartamentoWhereInput[],
2025-09-11T10:03:03:      ?   NOT?: HelpdeskDepartamentoWhereInput | HelpdeskDepartamentoWhereInput[],
2025-09-11T10:03:03:      ?   id?: StringFilter | String,
2025-09-11T10:03:03:      ?   nome?: StringFilter | String,
2025-09-11T10:03:03:      ?   descricao?: StringNullableFilter | String | Null,
2025-09-11T10:03:03:      ?   ativo?: BoolFilter | Boolean,
2025-09-11T10:03:03:      ?   imapHost?: StringNullableFilter | String | Null,
2025-09-11T10:03:03:      ?   imapPort?: IntNullableFilter | Int | Null,
2025-09-11T10:03:03:      ?   imapSecure?: BoolFilter | Boolean,
2025-09-11T10:03:03:      ?   imapEmail?: StringNullableFilter | String | Null,
2025-09-11T10:03:03:      ?   imapPassword?: StringNullableFilter | String | Null,
2025-09-11T10:03:03:      ?   smtpHost?: StringNullableFilter | String | Null,
2025-09-11T10:03:03:      ?   smtpPort?: IntNullableFilter | Int | Null,
2025-09-11T10:03:03:      ?   smtpSecure?: BoolFilter | Boolean,
2025-09-11T10:03:03:      ?   smtpEmail?: StringNullableFilter | String | Null,
2025-09-11T10:03:03:      ?   smtpPassword?: StringNullableFilter | String | Null,
2025-09-11T10:03:03:      ?   syncEnabled?: BoolFilter | Boolean,
2025-09-11T10:03:03:      ?   syncInterval?: IntFilter | Int,
2025-09-11T10:03:03:      ?   lastSync?: DateTimeNullableFilter | DateTime | Null,
2025-09-11T10:03:03:      ?   createdAt?: DateTimeFilter | DateTime,
2025-09-11T10:03:03:      ?   updatedAt?: DateTimeFilter | DateTime,
2025-09-11T10:03:03:      ?   grupoHierarquicoId?: StringNullableFilter | String | Null,
2025-09-11T10:03:03:      ?   grupoHierarquico?: GrupoHierarquicoNullableScalarRelationFilter | GrupoHierarquicoWhereInput | Null,
2025-09-11T10:03:03:      ?   tickets?: HelpdeskTicketListRelationFilter
2025-09-11T10:03:03:        }
2025-09-11T10:03:03:      })
2025-09-11T10:03:03: 
2025-09-11T10:03:03: Unknown argument `imapEnabled`. Available options are marked with ?.
2025-09-11T10:03:03:     at throwValidationException (/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
2025-09-11T10:03:03:     at ei.handleRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
2025-09-11T10:03:03:     at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
2025-09-11T10:03:03:     at ei.request (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
2025-09-11T10:03:03:     at async a (/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-09-11T10:03:03:     at async main (/app/src/scripts/start-ticket-automation.ts:19:27) {
2025-09-11T10:03:03:   clientVersion: '6.15.0'
2025-09-11T10:03:03: }
2025-09-11T10:03:08: ❌ Erro ao iniciar serviço: PrismaClientValidationError: 
2025-09-11T10:03:08: Invalid `db.helpdeskDepartamento.count()` invocation in
2025-09-11T10:03:08: /app/src/scripts/start-ticket-automation.ts:19:57
2025-09-11T10:03:08: 
2025-09-11T10:03:08:   16 console.log('✅ Conexão com banco de dados estabelecida');
2025-09-11T10:03:08:   17 
2025-09-11T10:03:08:   18 // Verificar se existem departamentos configurados
2025-09-11T10:03:08: → 19 const departamentos = await db.helpdeskDepartamento.count({
2025-09-11T10:03:08:        select: {
2025-09-11T10:03:08:          _count: {
2025-09-11T10:03:08:            select: {
2025-09-11T10:03:08:              _all: true
2025-09-11T10:03:08:            }
2025-09-11T10:03:08:          }
2025-09-11T10:03:08:        },
2025-09-11T10:03:08:        where: {
2025-09-11T10:03:08:          imapEnabled: true,
2025-09-11T10:03:08:          ~~~~~~~~~~~
2025-09-11T10:03:08:          AND: [
2025-09-11T10:03:08:            {
2025-09-11T10:03:08:              imapHost: {
2025-09-11T10:03:08:                not: null
2025-09-11T10:03:08:              }
2025-09-11T10:03:08:            },
2025-09-11T10:03:08:            {
2025-09-11T10:03:08:              imapPort: {
2025-09-11T10:03:08:                not: null
2025-09-11T10:03:08:              }
2025-09-11T10:03:08:            },
2025-09-11T10:03:08:            {
2025-09-11T10:03:08:              imapUsername: {
2025-09-11T10:03:08:                not: null
2025-09-11T10:03:08:              }
2025-09-11T10:03:08:            },
2025-09-11T10:03:08:            {
2025-09-11T10:03:08:              imapPassword: {
2025-09-11T10:03:08:                not: null
2025-09-11T10:03:08:              }
2025-09-11T10:03:08:            }
2025-09-11T10:03:08:          ],
2025-09-11T10:03:08:      ?   OR?: HelpdeskDepartamentoWhereInput[],
2025-09-11T10:03:08:      ?   NOT?: HelpdeskDepartamentoWhereInput | HelpdeskDepartamentoWhereInput[],
2025-09-11T10:03:08:      ?   id?: StringFilter | String,
2025-09-11T10:03:08:      ?   nome?: StringFilter | String,
2025-09-11T10:03:08:      ?   descricao?: StringNullableFilter | String | Null,
2025-09-11T10:03:08:      ?   ativo?: BoolFilter | Boolean,
2025-09-11T10:03:08:      ?   imapHost?: StringNullableFilter | String | Null,
2025-09-11T10:03:08:      ?   imapPort?: IntNullableFilter | Int | Null,
2025-09-11T10:03:08:      ?   imapSecure?: BoolFilter | Boolean,
2025-09-11T10:03:08:      ?   imapEmail?: StringNullableFilter | String | Null,
2025-09-11T10:03:08:      ?   imapPassword?: StringNullableFilter | String | Null,
2025-09-11T10:03:08:      ?   smtpHost?: StringNullableFilter | String | Null,
2025-09-11T10:03:08:      ?   smtpPort?: IntNullableFilter | Int | Null,
2025-09-11T10:03:08:      ?   smtpSecure?: BoolFilter | Boolean,
2025-09-11T10:03:08:      ?   smtpEmail?: StringNullableFilter | String | Null,
2025-09-11T10:03:08:      ?   smtpPassword?: StringNullableFilter | String | Null,
2025-09-11T10:03:08:      ?   syncEnabled?: BoolFilter | Boolean,
2025-09-11T10:03:08:      ?   syncInterval?: IntFilter | Int,
2025-09-11T10:03:08:      ?   lastSync?: DateTimeNullableFilter | DateTime | Null,
2025-09-11T10:03:08:      ?   createdAt?: DateTimeFilter | DateTime,
2025-09-11T10:03:08:      ?   updatedAt?: DateTimeFilter | DateTime,
2025-09-11T10:03:08:      ?   grupoHierarquicoId?: StringNullableFilter | String | Null,
2025-09-11T10:03:08:      ?   grupoHierarquico?: GrupoHierarquicoNullableScalarRelationFilter | GrupoHierarquicoWhereInput | Null,
2025-09-11T10:03:08:      ?   tickets?: HelpdeskTicketListRelationFilter
2025-09-11T10:03:08:        }
2025-09-11T10:03:08:      })
2025-09-11T10:03:08: 
2025-09-11T10:03:08: Unknown argument `imapEnabled`. Available options are marked with ?.
2025-09-11T10:03:08:     at throwValidationException (/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
2025-09-11T10:03:08:     at ei.handleRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
2025-09-11T10:03:08:     at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
2025-09-11T10:03:08:     at ei.request (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
2025-09-11T10:03:08:     at async a (/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-09-11T10:03:08:     at async main (/app/src/scripts/start-ticket-automation.ts:19:27) {
2025-09-11T10:03:08:   clientVersion: '6.15.0'
2025-09-11T10:03:08: }
2025-09-11T10:03:13: ❌ Erro ao iniciar serviço: PrismaClientValidationError: 
2025-09-11T10:03:13: Invalid `db.helpdeskDepartamento.count()` invocation in
2025-09-11T10:03:13: /app/src/scripts/start-ticket-automation.ts:19:57
2025-09-11T10:03:13: 
2025-09-11T10:03:13:   16 console.log('✅ Conexão com banco de dados estabelecida');
2025-09-11T10:03:13:   17 
2025-09-11T10:03:13:   18 // Verificar se existem departamentos configurados
2025-09-11T10:03:13: → 19 const departamentos = await db.helpdeskDepartamento.count({
2025-09-11T10:03:13:        select: {
2025-09-11T10:03:13:          _count: {
2025-09-11T10:03:13:            select: {
2025-09-11T10:03:13:              _all: true
2025-09-11T10:03:13:            }
2025-09-11T10:03:13:          }
2025-09-11T10:03:13:        },
2025-09-11T10:03:13:        where: {
2025-09-11T10:03:13:          imapEnabled: true,
2025-09-11T10:03:13:          ~~~~~~~~~~~
2025-09-11T10:03:13:          AND: [
2025-09-11T10:03:13:            {
2025-09-11T10:03:13:              imapHost: {
2025-09-11T10:03:13:                not: null
2025-09-11T10:03:13:              }
2025-09-11T10:03:13:            },
2025-09-11T10:03:13:            {
2025-09-11T10:03:13:              imapPort: {
2025-09-11T10:03:13:                not: null
2025-09-11T10:03:13:              }
2025-09-11T10:03:13:            },
2025-09-11T10:03:13:            {
2025-09-11T10:03:13:              imapUsername: {
2025-09-11T10:03:13:                not: null
2025-09-11T10:03:13:              }
2025-09-11T10:03:13:            },
2025-09-11T10:03:13:            {
2025-09-11T10:03:13:              imapPassword: {
2025-09-11T10:03:13:                not: null
2025-09-11T10:03:13:              }
2025-09-11T10:03:13:            }
2025-09-11T10:03:13:          ],
2025-09-11T10:03:13:      ?   OR?: HelpdeskDepartamentoWhereInput[],
2025-09-11T10:03:13:      ?   NOT?: HelpdeskDepartamentoWhereInput | HelpdeskDepartamentoWhereInput[],
2025-09-11T10:03:13:      ?   id?: StringFilter | String,
2025-09-11T10:03:13:      ?   nome?: StringFilter | String,
2025-09-11T10:03:13:      ?   descricao?: StringNullableFilter | String | Null,
2025-09-11T10:03:13:      ?   ativo?: BoolFilter | Boolean,
2025-09-11T10:03:13:      ?   imapHost?: StringNullableFilter | String | Null,
2025-09-11T10:03:13:      ?   imapPort?: IntNullableFilter | Int | Null,
2025-09-11T10:03:13:      ?   imapSecure?: BoolFilter | Boolean,
2025-09-11T10:03:13:      ?   imapEmail?: StringNullableFilter | String | Null,
2025-09-11T10:03:13:      ?   imapPassword?: StringNullableFilter | String | Null,
2025-09-11T10:03:13:      ?   smtpHost?: StringNullableFilter | String | Null,
2025-09-11T10:03:13:      ?   smtpPort?: IntNullableFilter | Int | Null,
2025-09-11T10:03:13:      ?   smtpSecure?: BoolFilter | Boolean,
2025-09-11T10:03:13:      ?   smtpEmail?: StringNullableFilter | String | Null,
2025-09-11T10:03:13:      ?   smtpPassword?: StringNullableFilter | String | Null,
2025-09-11T10:03:13:      ?   syncEnabled?: BoolFilter | Boolean,
2025-09-11T10:03:13:      ?   syncInterval?: IntFilter | Int,
2025-09-11T10:03:13:      ?   lastSync?: DateTimeNullableFilter | DateTime | Null,
2025-09-11T10:03:13:      ?   createdAt?: DateTimeFilter | DateTime,
2025-09-11T10:03:13:      ?   updatedAt?: DateTimeFilter | DateTime,
2025-09-11T10:03:13:      ?   grupoHierarquicoId?: StringNullableFilter | String | Null,
2025-09-11T10:03:13:      ?   grupoHierarquico?: GrupoHierarquicoNullableScalarRelationFilter | GrupoHierarquicoWhereInput | Null,
2025-09-11T10:03:13:      ?   tickets?: HelpdeskTicketListRelationFilter
2025-09-11T10:03:13:        }
2025-09-11T10:03:13:      })
2025-09-11T10:03:13: 
2025-09-11T10:03:13: Unknown argument `imapEnabled`. Available options are marked with ?.
2025-09-11T10:03:13:     at throwValidationException (/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
2025-09-11T10:03:13:     at ei.handleRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
2025-09-11T10:03:13:     at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
2025-09-11T10:03:13:     at ei.request (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
2025-09-11T10:03:13:     at async a (/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-09-11T10:03:13:     at async main (/app/src/scripts/start-ticket-automation.ts:19:27) {
2025-09-11T10:03:13:   clientVersion: '6.15.0'
2025-09-11T10:03:13: }
2025-09-11T10:03:18: ❌ Erro ao iniciar serviço: PrismaClientValidationError: 
2025-09-11T10:03:18: Invalid `db.helpdeskDepartamento.count()` invocation in
2025-09-11T10:03:18: /app/src/scripts/start-ticket-automation.ts:19:57
2025-09-11T10:03:18: 
2025-09-11T10:03:18:   16 console.log('✅ Conexão com banco de dados estabelecida');
2025-09-11T10:03:18:   17 
2025-09-11T10:03:18:   18 // Verificar se existem departamentos configurados
2025-09-11T10:03:18: → 19 const departamentos = await db.helpdeskDepartamento.count({
2025-09-11T10:03:18:        select: {
2025-09-11T10:03:18:          _count: {
2025-09-11T10:03:18:            select: {
2025-09-11T10:03:18:              _all: true
2025-09-11T10:03:18:            }
2025-09-11T10:03:18:          }
2025-09-11T10:03:18:        },
2025-09-11T10:03:18:        where: {
2025-09-11T10:03:18:          imapEnabled: true,
2025-09-11T10:03:18:          ~~~~~~~~~~~
2025-09-11T10:03:18:          AND: [
2025-09-11T10:03:18:            {
2025-09-11T10:03:18:              imapHost: {
2025-09-11T10:03:18:                not: null
2025-09-11T10:03:18:              }
2025-09-11T10:03:18:            },
2025-09-11T10:03:18:            {
2025-09-11T10:03:18:              imapPort: {
2025-09-11T10:03:18:                not: null
2025-09-11T10:03:18:              }
2025-09-11T10:03:18:            },
2025-09-11T10:03:18:            {
2025-09-11T10:03:18:              imapUsername: {
2025-09-11T10:03:18:                not: null
2025-09-11T10:03:18:              }
2025-09-11T10:03:18:            },
2025-09-11T10:03:18:            {
2025-09-11T10:03:18:              imapPassword: {
2025-09-11T10:03:18:                not: null
2025-09-11T10:03:18:              }
2025-09-11T10:03:18:            }
2025-09-11T10:03:18:          ],
2025-09-11T10:03:18:      ?   OR?: HelpdeskDepartamentoWhereInput[],
2025-09-11T10:03:18:      ?   NOT?: HelpdeskDepartamentoWhereInput | HelpdeskDepartamentoWhereInput[],
2025-09-11T10:03:18:      ?   id?: StringFilter | String,
2025-09-11T10:03:18:      ?   nome?: StringFilter | String,
2025-09-11T10:03:18:      ?   descricao?: StringNullableFilter | String | Null,
2025-09-11T10:03:18:      ?   ativo?: BoolFilter | Boolean,
2025-09-11T10:03:18:      ?   imapHost?: StringNullableFilter | String | Null,
2025-09-11T10:03:18:      ?   imapPort?: IntNullableFilter | Int | Null,
2025-09-11T10:03:18:      ?   imapSecure?: BoolFilter | Boolean,
2025-09-11T10:03:18:      ?   imapEmail?: StringNullableFilter | String | Null,
2025-09-11T10:03:18:      ?   imapPassword?: StringNullableFilter | String | Null,
2025-09-11T10:03:18:      ?   smtpHost?: StringNullableFilter | String | Null,
2025-09-11T10:03:18:      ?   smtpPort?: IntNullableFilter | Int | Null,
2025-09-11T10:03:18:      ?   smtpSecure?: BoolFilter | Boolean,
2025-09-11T10:03:18:      ?   smtpEmail?: StringNullableFilter | String | Null,
2025-09-11T10:03:18:      ?   smtpPassword?: StringNullableFilter | String | Null,
2025-09-11T10:03:18:      ?   syncEnabled?: BoolFilter | Boolean,
2025-09-11T10:03:18:      ?   syncInterval?: IntFilter | Int,
2025-09-11T10:03:18:      ?   lastSync?: DateTimeNullableFilter | DateTime | Null,
2025-09-11T10:03:18:      ?   createdAt?: DateTimeFilter | DateTime,
2025-09-11T10:03:18:      ?   updatedAt?: DateTimeFilter | DateTime,
2025-09-11T10:03:18:      ?   grupoHierarquicoId?: StringNullableFilter | String | Null,
2025-09-11T10:03:18:      ?   grupoHierarquico?: GrupoHierarquicoNullableScalarRelationFilter | GrupoHierarquicoWhereInput | Null,
2025-09-11T10:03:18:      ?   tickets?: HelpdeskTicketListRelationFilter
2025-09-11T10:03:18:        }
2025-09-11T10:03:18:      })
2025-09-11T10:03:18: 
2025-09-11T10:03:18: Unknown argument `imapEnabled`. Available options are marked with ?.
2025-09-11T10:03:18:     at throwValidationException (/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
2025-09-11T10:03:18:     at ei.handleRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
2025-09-11T10:03:18:     at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
2025-09-11T10:03:18:     at ei.request (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
2025-09-11T10:03:18:     at async a (/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-09-11T10:03:18:     at async main (/app/src/scripts/start-ticket-automation.ts:19:27) {
2025-09-11T10:03:18:   clientVersion: '6.15.0'
2025-09-11T10:03:18: }
2025-09-11T10:03:23: ❌ Erro ao iniciar serviço: PrismaClientValidationError: 
2025-09-11T10:03:23: Invalid `db.helpdeskDepartamento.count()` invocation in
2025-09-11T10:03:23: /app/src/scripts/start-ticket-automation.ts:19:57
2025-09-11T10:03:23: 
2025-09-11T10:03:23:   16 console.log('✅ Conexão com banco de dados estabelecida');
2025-09-11T10:03:23:   17 
2025-09-11T10:03:23:   18 // Verificar se existem departamentos configurados
2025-09-11T10:03:23: → 19 const departamentos = await db.helpdeskDepartamento.count({
2025-09-11T10:03:23:        select: {
2025-09-11T10:03:23:          _count: {
2025-09-11T10:03:23:            select: {
2025-09-11T10:03:23:              _all: true
2025-09-11T10:03:23:            }
2025-09-11T10:03:23:          }
2025-09-11T10:03:23:        },
2025-09-11T10:03:23:        where: {
2025-09-11T10:03:23:          imapEnabled: true,
2025-09-11T10:03:23:          ~~~~~~~~~~~
2025-09-11T10:03:23:          AND: [
2025-09-11T10:03:23:            {
2025-09-11T10:03:23:              imapHost: {
2025-09-11T10:03:23:                not: null
2025-09-11T10:03:23:              }
2025-09-11T10:03:23:            },
2025-09-11T10:03:23:            {
2025-09-11T10:03:23:              imapPort: {
2025-09-11T10:03:23:                not: null
2025-09-11T10:03:23:              }
2025-09-11T10:03:23:            },
2025-09-11T10:03:23:            {
2025-09-11T10:03:23:              imapUsername: {
2025-09-11T10:03:23:                not: null
2025-09-11T10:03:23:              }
2025-09-11T10:03:23:            },
2025-09-11T10:03:23:            {
2025-09-11T10:03:23:              imapPassword: {
2025-09-11T10:03:23:                not: null
2025-09-11T10:03:23:              }
2025-09-11T10:03:23:            }
2025-09-11T10:03:23:          ],
2025-09-11T10:03:23:      ?   OR?: HelpdeskDepartamentoWhereInput[],
2025-09-11T10:03:23:      ?   NOT?: HelpdeskDepartamentoWhereInput | HelpdeskDepartamentoWhereInput[],
2025-09-11T10:03:23:      ?   id?: StringFilter | String,
2025-09-11T10:03:23:      ?   nome?: StringFilter | String,
2025-09-11T10:03:23:      ?   descricao?: StringNullableFilter | String | Null,
2025-09-11T10:03:23:      ?   ativo?: BoolFilter | Boolean,
2025-09-11T10:03:23:      ?   imapHost?: StringNullableFilter | String | Null,
2025-09-11T10:03:23:      ?   imapPort?: IntNullableFilter | Int | Null,
2025-09-11T10:03:23:      ?   imapSecure?: BoolFilter | Boolean,
2025-09-11T10:03:23:      ?   imapEmail?: StringNullableFilter | String | Null,
2025-09-11T10:03:23:      ?   imapPassword?: StringNullableFilter | String | Null,
2025-09-11T10:03:23:      ?   smtpHost?: StringNullableFilter | String | Null,
2025-09-11T10:03:23:      ?   smtpPort?: IntNullableFilter | Int | Null,
2025-09-11T10:03:23:      ?   smtpSecure?: BoolFilter | Boolean,
2025-09-11T10:03:23:      ?   smtpEmail?: StringNullableFilter | String | Null,
2025-09-11T10:03:23:      ?   smtpPassword?: StringNullableFilter | String | Null,
2025-09-11T10:03:23:      ?   syncEnabled?: BoolFilter | Boolean,
2025-09-11T10:03:23:      ?   syncInterval?: IntFilter | Int,
2025-09-11T10:03:23:      ?   lastSync?: DateTimeNullableFilter | DateTime | Null,
2025-09-11T10:03:23:      ?   createdAt?: DateTimeFilter | DateTime,
2025-09-11T10:03:23:      ?   updatedAt?: DateTimeFilter | DateTime,
2025-09-11T10:03:23:      ?   grupoHierarquicoId?: StringNullableFilter | String | Null,
2025-09-11T10:03:23:      ?   grupoHierarquico?: GrupoHierarquicoNullableScalarRelationFilter | GrupoHierarquicoWhereInput | Null,
2025-09-11T10:03:23:      ?   tickets?: HelpdeskTicketListRelationFilter
2025-09-11T10:03:23:        }
2025-09-11T10:03:23:      })
2025-09-11T10:03:23: 
2025-09-11T10:03:23: Unknown argument `imapEnabled`. Available options are marked with ?.
2025-09-11T10:03:23:     at throwValidationException (/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
2025-09-11T10:03:23:     at ei.handleRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
2025-09-11T10:03:23:     at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
2025-09-11T10:03:23:     at ei.request (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
2025-09-11T10:03:23:     at async a (/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-09-11T10:03:23:     at async main (/app/src/scripts/start-ticket-automation.ts:19:27) {
2025-09-11T10:03:23:   clientVersion: '6.15.0'
2025-09-11T10:03:23: }
2025-09-11T10:09:12: node:events:502
2025-09-11T10:09:12:       throw er; // Unhandled 'error' event
2025-09-11T10:09:12:       ^
2025-09-11T10:09:12: 
2025-09-11T10:09:12: Error: Socket timeout
2025-09-11T10:09:12:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T10:09:12:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:09:12:     at Socket._onTimeout (node:net:595:8)
2025-09-11T10:09:12:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T10:09:12:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T10:09:12: Emitted 'error' event on ImapFlow instance at:
2025-09-11T10:09:12:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T10:09:12:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T10:09:12:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:09:12:     [... lines matching original stack trace ...]
2025-09-11T10:09:12:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T10:09:12:   code: 'ETIMEOUT',
2025-09-11T10:09:12:   _connId: '1bwhynbogme3rmdkhia4'
2025-09-11T10:09:12: }
2025-09-11T10:09:12: 
2025-09-11T10:09:12: Node.js v20.19.4
2025-09-11T10:14:25: node:events:502
2025-09-11T10:14:25:       throw er; // Unhandled 'error' event
2025-09-11T10:14:25:       ^
2025-09-11T10:14:25: 
2025-09-11T10:14:25: Error: Socket timeout
2025-09-11T10:14:25:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T10:14:25:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:14:25:     at Socket._onTimeout (node:net:595:8)
2025-09-11T10:14:25:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T10:14:25:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T10:14:25: Emitted 'error' event on ImapFlow instance at:
2025-09-11T10:14:25:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T10:14:25:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T10:14:25:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:14:25:     [... lines matching original stack trace ...]
2025-09-11T10:14:25:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T10:14:25:   code: 'ETIMEOUT',
2025-09-11T10:14:25:   _connId: '2acx94w36ie3tk417itw'
2025-09-11T10:14:25: }
2025-09-11T10:14:25: 
2025-09-11T10:14:25: Node.js v20.19.4
2025-09-11T10:19:37: node:events:502
2025-09-11T10:19:37:       throw er; // Unhandled 'error' event
2025-09-11T10:19:37:       ^
2025-09-11T10:19:37: 
2025-09-11T10:19:37: Error: Socket timeout
2025-09-11T10:19:37:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T10:19:37:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:19:37:     at Socket._onTimeout (node:net:595:8)
2025-09-11T10:19:37:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T10:19:37:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T10:19:37: Emitted 'error' event on ImapFlow instance at:
2025-09-11T10:19:37:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T10:19:37:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T10:19:37:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:19:37:     [... lines matching original stack trace ...]
2025-09-11T10:19:37:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T10:19:37:   code: 'ETIMEOUT',
2025-09-11T10:19:37:   _connId: '13846uxin27hiv5a2e0a'
2025-09-11T10:19:37: }
2025-09-11T10:19:37: 
2025-09-11T10:19:37: Node.js v20.19.4
2025-09-11T10:24:48: node:events:502
2025-09-11T10:24:48:       throw er; // Unhandled 'error' event
2025-09-11T10:24:48:       ^
2025-09-11T10:24:48: 
2025-09-11T10:24:48: Error: Socket timeout
2025-09-11T10:24:48:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T10:24:48:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:24:48:     at Socket._onTimeout (node:net:595:8)
2025-09-11T10:24:48:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T10:24:48:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T10:24:48: Emitted 'error' event on ImapFlow instance at:
2025-09-11T10:24:48:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T10:24:48:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T10:24:48:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:24:48:     [... lines matching original stack trace ...]
2025-09-11T10:24:48:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T10:24:48:   code: 'ETIMEOUT',
2025-09-11T10:24:48:   _connId: '19bjb6wrkovdnckls0kb'
2025-09-11T10:24:48: }
2025-09-11T10:24:48: 
2025-09-11T10:24:48: Node.js v20.19.4
2025-09-11T10:29:59: node:events:502
2025-09-11T10:29:59:       throw er; // Unhandled 'error' event
2025-09-11T10:29:59:       ^
2025-09-11T10:29:59: 
2025-09-11T10:29:59: Error: Socket timeout
2025-09-11T10:29:59:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T10:29:59:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:29:59:     at Socket._onTimeout (node:net:595:8)
2025-09-11T10:29:59:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T10:29:59:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T10:29:59: Emitted 'error' event on ImapFlow instance at:
2025-09-11T10:29:59:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T10:29:59:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T10:29:59:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:29:59:     [... lines matching original stack trace ...]
2025-09-11T10:29:59:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T10:29:59:   code: 'ETIMEOUT',
2025-09-11T10:29:59:   _connId: 'yhmazuxmo1gn97zf9rg7'
2025-09-11T10:29:59: }
2025-09-11T10:29:59: 
2025-09-11T10:29:59: Node.js v20.19.4
2025-09-11T10:35:10: node:events:502
2025-09-11T10:35:10:       throw er; // Unhandled 'error' event
2025-09-11T10:35:10:       ^
2025-09-11T10:35:10: 
2025-09-11T10:35:10: Error: Socket timeout
2025-09-11T10:35:10:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T10:35:10:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:35:10:     at Socket._onTimeout (node:net:595:8)
2025-09-11T10:35:10:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T10:35:10:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T10:35:10: Emitted 'error' event on ImapFlow instance at:
2025-09-11T10:35:10:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T10:35:10:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T10:35:10:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:35:10:     [... lines matching original stack trace ...]
2025-09-11T10:35:10:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T10:35:10:   code: 'ETIMEOUT',
2025-09-11T10:35:10:   _connId: 'k6lka64ml7oug0p06sau'
2025-09-11T10:35:10: }
2025-09-11T10:35:10: 
2025-09-11T10:35:10: Node.js v20.19.4
2025-09-11T10:40:22: node:events:502
2025-09-11T10:40:22:       throw er; // Unhandled 'error' event
2025-09-11T10:40:22:       ^
2025-09-11T10:40:22: 
2025-09-11T10:40:22: Error: Socket timeout
2025-09-11T10:40:22:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T10:40:22:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:40:22:     at Socket._onTimeout (node:net:595:8)
2025-09-11T10:40:22:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T10:40:22:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T10:40:22: Emitted 'error' event on ImapFlow instance at:
2025-09-11T10:40:22:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T10:40:22:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T10:40:22:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:40:22:     [... lines matching original stack trace ...]
2025-09-11T10:40:22:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T10:40:22:   code: 'ETIMEOUT',
2025-09-11T10:40:22:   _connId: 'v3qfnmgr2o60gb375tx1'
2025-09-11T10:40:22: }
2025-09-11T10:40:22: 
2025-09-11T10:40:22: Node.js v20.19.4
2025-09-11T10:45:33: node:events:502
2025-09-11T10:45:33:       throw er; // Unhandled 'error' event
2025-09-11T10:45:33:       ^
2025-09-11T10:45:33: 
2025-09-11T10:45:33: Error: Socket timeout
2025-09-11T10:45:33:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T10:45:33:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:45:33:     at Socket._onTimeout (node:net:595:8)
2025-09-11T10:45:33:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T10:45:33:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T10:45:33: Emitted 'error' event on ImapFlow instance at:
2025-09-11T10:45:33:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T10:45:33:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T10:45:33:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:45:33:     [... lines matching original stack trace ...]
2025-09-11T10:45:33:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T10:45:33:   code: 'ETIMEOUT',
2025-09-11T10:45:33:   _connId: '15o5ew4l13tl63lewhcr'
2025-09-11T10:45:33: }
2025-09-11T10:45:33: 
2025-09-11T10:45:33: Node.js v20.19.4
2025-09-11T10:50:45: node:events:502
2025-09-11T10:50:45:       throw er; // Unhandled 'error' event
2025-09-11T10:50:45:       ^
2025-09-11T10:50:45: 
2025-09-11T10:50:45: Error: Socket timeout
2025-09-11T10:50:45:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T10:50:45:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:50:45:     at Socket._onTimeout (node:net:595:8)
2025-09-11T10:50:45:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T10:50:45:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T10:50:45: Emitted 'error' event on ImapFlow instance at:
2025-09-11T10:50:45:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T10:50:45:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T10:50:45:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:50:45:     [... lines matching original stack trace ...]
2025-09-11T10:50:45:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T10:50:45:   code: 'ETIMEOUT',
2025-09-11T10:50:45:   _connId: 'une5huuyzuqp871rgkms'
2025-09-11T10:50:45: }
2025-09-11T10:50:45: 
2025-09-11T10:50:45: Node.js v20.19.4
2025-09-11T10:55:56: node:events:502
2025-09-11T10:55:56:       throw er; // Unhandled 'error' event
2025-09-11T10:55:56:       ^
2025-09-11T10:55:56: 
2025-09-11T10:55:56: Error: Socket timeout
2025-09-11T10:55:56:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T10:55:56:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:55:56:     at Socket._onTimeout (node:net:595:8)
2025-09-11T10:55:56:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T10:55:56:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T10:55:56: Emitted 'error' event on ImapFlow instance at:
2025-09-11T10:55:56:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T10:55:56:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T10:55:56:     at TLSSocket.emit (node:events:524:28)
2025-09-11T10:55:56:     [... lines matching original stack trace ...]
2025-09-11T10:55:56:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T10:55:56:   code: 'ETIMEOUT',
2025-09-11T10:55:56:   _connId: 'sg1l20q4mca9wnjxw854'
2025-09-11T10:55:56: }
2025-09-11T10:55:56: 
2025-09-11T10:55:56: Node.js v20.19.4
2025-09-11T11:01:08: node:events:502
2025-09-11T11:01:08:       throw er; // Unhandled 'error' event
2025-09-11T11:01:08:       ^
2025-09-11T11:01:08: 
2025-09-11T11:01:08: Error: Socket timeout
2025-09-11T11:01:08:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T11:01:08:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:01:08:     at Socket._onTimeout (node:net:595:8)
2025-09-11T11:01:08:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T11:01:08:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T11:01:08: Emitted 'error' event on ImapFlow instance at:
2025-09-11T11:01:08:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T11:01:08:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T11:01:08:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:01:08:     [... lines matching original stack trace ...]
2025-09-11T11:01:08:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T11:01:08:   code: 'ETIMEOUT',
2025-09-11T11:01:08:   _connId: '18legovylbrei4x1m8vj'
2025-09-11T11:01:08: }
2025-09-11T11:01:08: 
2025-09-11T11:01:08: Node.js v20.19.4
2025-09-11T11:06:19: node:events:502
2025-09-11T11:06:19:       throw er; // Unhandled 'error' event
2025-09-11T11:06:19:       ^
2025-09-11T11:06:19: 
2025-09-11T11:06:19: Error: Socket timeout
2025-09-11T11:06:19:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T11:06:19:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:06:19:     at Socket._onTimeout (node:net:595:8)
2025-09-11T11:06:19:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T11:06:19:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T11:06:19: Emitted 'error' event on ImapFlow instance at:
2025-09-11T11:06:19:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T11:06:19:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T11:06:19:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:06:19:     [... lines matching original stack trace ...]
2025-09-11T11:06:19:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T11:06:19:   code: 'ETIMEOUT',
2025-09-11T11:06:19:   _connId: '0xi0hxxiud6xiyo696zd'
2025-09-11T11:06:19: }
2025-09-11T11:06:19: 
2025-09-11T11:06:19: Node.js v20.19.4
2025-09-11T11:11:31: node:events:502
2025-09-11T11:11:31:       throw er; // Unhandled 'error' event
2025-09-11T11:11:31:       ^
2025-09-11T11:11:31: 
2025-09-11T11:11:31: Error: Socket timeout
2025-09-11T11:11:31:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T11:11:31:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:11:31:     at Socket._onTimeout (node:net:595:8)
2025-09-11T11:11:31:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T11:11:31:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T11:11:31: Emitted 'error' event on ImapFlow instance at:
2025-09-11T11:11:31:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T11:11:31:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T11:11:31:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:11:31:     [... lines matching original stack trace ...]
2025-09-11T11:11:31:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T11:11:31:   code: 'ETIMEOUT',
2025-09-11T11:11:31:   _connId: 'o5vy52m2y4ixmod6dlnv'
2025-09-11T11:11:31: }
2025-09-11T11:11:31: 
2025-09-11T11:11:31: Node.js v20.19.4
2025-09-11T11:16:42: node:events:502
2025-09-11T11:16:42:       throw er; // Unhandled 'error' event
2025-09-11T11:16:42:       ^
2025-09-11T11:16:42: 
2025-09-11T11:16:42: Error: Socket timeout
2025-09-11T11:16:42:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T11:16:42:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:16:42:     at Socket._onTimeout (node:net:595:8)
2025-09-11T11:16:42:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T11:16:42:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T11:16:42: Emitted 'error' event on ImapFlow instance at:
2025-09-11T11:16:42:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T11:16:42:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T11:16:42:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:16:42:     [... lines matching original stack trace ...]
2025-09-11T11:16:42:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T11:16:42:   code: 'ETIMEOUT',
2025-09-11T11:16:42:   _connId: '16oth4hz5cgbsmf4678y'
2025-09-11T11:16:42: }
2025-09-11T11:16:42: 
2025-09-11T11:16:42: Node.js v20.19.4
2025-09-11T11:21:55: node:events:502
2025-09-11T11:21:55:       throw er; // Unhandled 'error' event
2025-09-11T11:21:55:       ^
2025-09-11T11:21:55: 
2025-09-11T11:21:55: Error: Socket timeout
2025-09-11T11:21:55:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T11:21:55:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:21:55:     at Socket._onTimeout (node:net:595:8)
2025-09-11T11:21:55:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T11:21:55:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T11:21:55: Emitted 'error' event on ImapFlow instance at:
2025-09-11T11:21:55:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T11:21:55:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T11:21:55:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:21:55:     [... lines matching original stack trace ...]
2025-09-11T11:21:55:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T11:21:55:   code: 'ETIMEOUT',
2025-09-11T11:21:55:   _connId: '12fvhzxdvb2wn82h3k1f'
2025-09-11T11:21:55: }
2025-09-11T11:21:55: 
2025-09-11T11:21:55: Node.js v20.19.4
2025-09-11T11:27:09: node:events:502
2025-09-11T11:27:09:       throw er; // Unhandled 'error' event
2025-09-11T11:27:09:       ^
2025-09-11T11:27:09: 
2025-09-11T11:27:09: Error: Socket timeout
2025-09-11T11:27:09:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T11:27:09:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:27:09:     at Socket._onTimeout (node:net:595:8)
2025-09-11T11:27:09:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T11:27:09:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T11:27:09: Emitted 'error' event on ImapFlow instance at:
2025-09-11T11:27:09:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T11:27:09:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T11:27:09:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:27:09:     [... lines matching original stack trace ...]
2025-09-11T11:27:09:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T11:27:09:   code: 'ETIMEOUT',
2025-09-11T11:27:09:   _connId: '0scl0j1wl02jbxejrb33'
2025-09-11T11:27:09: }
2025-09-11T11:27:09: 
2025-09-11T11:27:09: Node.js v20.19.4
2025-09-11T11:32:01: Erro ao buscar conteúdo do email: Error: Connection not available
2025-09-11T11:32:01:     at ImapFlow.close (/app/node_modules/imapflow/lib/imap-flow.js:1708:39)
2025-09-11T11:32:01:     at TLSSocket._socketEnd (/app/node_modules/imapflow/lib/imap-flow.js:776:58)
2025-09-11T11:32:01:     at Object.onceWrapper (node:events:638:28)
2025-09-11T11:32:01:     at TLSSocket.emit (node:events:536:35)
2025-09-11T11:32:01:     at endReadableNT (node:internal/streams/readable:1698:12)
2025-09-11T11:32:01:     at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
2025-09-11T11:32:01:   code: 'NoConnection'
2025-09-11T11:32:01: }
2025-09-11T11:37:12: node:events:502
2025-09-11T11:37:12:       throw er; // Unhandled 'error' event
2025-09-11T11:37:12:       ^
2025-09-11T11:37:12: 
2025-09-11T11:37:12: Error: Socket timeout
2025-09-11T11:37:12:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T11:37:12:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:37:12:     at Socket._onTimeout (node:net:595:8)
2025-09-11T11:37:12:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T11:37:12:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T11:37:12: Emitted 'error' event on ImapFlow instance at:
2025-09-11T11:37:12:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T11:37:12:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T11:37:12:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:37:12:     [... lines matching original stack trace ...]
2025-09-11T11:37:12:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T11:37:12:   code: 'ETIMEOUT',
2025-09-11T11:37:12:   _connId: 'y6tw6tj3nui7xlfwr4hl'
2025-09-11T11:37:12: }
2025-09-11T11:37:12: 
2025-09-11T11:37:12: Node.js v20.19.4
2025-09-11T11:43:04: node:events:502
2025-09-11T11:43:04:       throw er; // Unhandled 'error' event
2025-09-11T11:43:04:       ^
2025-09-11T11:43:04: 
2025-09-11T11:43:04: Error: Socket timeout
2025-09-11T11:43:04:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T11:43:04:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:43:04:     at Socket._onTimeout (node:net:595:8)
2025-09-11T11:43:04:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T11:43:04:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T11:43:04: Emitted 'error' event on ImapFlow instance at:
2025-09-11T11:43:04:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T11:43:04:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T11:43:04:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:43:04:     [... lines matching original stack trace ...]
2025-09-11T11:43:04:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T11:43:04:   code: 'ETIMEOUT',
2025-09-11T11:43:04:   _connId: '1a0efac4wvb0n5bxaad6'
2025-09-11T11:43:04: }
2025-09-11T11:43:04: 
2025-09-11T11:43:04: Node.js v20.19.4
2025-09-11T11:48:16: node:events:502
2025-09-11T11:48:16:       throw er; // Unhandled 'error' event
2025-09-11T11:48:16:       ^
2025-09-11T11:48:16: 
2025-09-11T11:48:16: Error: Socket timeout
2025-09-11T11:48:16:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T11:48:16:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:48:16:     at Socket._onTimeout (node:net:595:8)
2025-09-11T11:48:16:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T11:48:16:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T11:48:16: Emitted 'error' event on ImapFlow instance at:
2025-09-11T11:48:16:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T11:48:16:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T11:48:16:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:48:16:     [... lines matching original stack trace ...]
2025-09-11T11:48:16:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T11:48:16:   code: 'ETIMEOUT',
2025-09-11T11:48:16:   _connId: '1bcumlrrd74fto4lhy9x'
2025-09-11T11:48:16: }
2025-09-11T11:48:16: 
2025-09-11T11:48:16: Node.js v20.19.4
2025-09-11T11:53:27: node:events:502
2025-09-11T11:53:27:       throw er; // Unhandled 'error' event
2025-09-11T11:53:27:       ^
2025-09-11T11:53:27: 
2025-09-11T11:53:27: Error: Socket timeout
2025-09-11T11:53:27:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T11:53:27:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:53:27:     at Socket._onTimeout (node:net:595:8)
2025-09-11T11:53:27:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T11:53:27:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T11:53:27: Emitted 'error' event on ImapFlow instance at:
2025-09-11T11:53:27:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T11:53:27:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T11:53:27:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:53:27:     [... lines matching original stack trace ...]
2025-09-11T11:53:27:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T11:53:27:   code: 'ETIMEOUT',
2025-09-11T11:53:27:   _connId: '9j3thyvppc2ub3r3oq0u'
2025-09-11T11:53:27: }
2025-09-11T11:53:27: 
2025-09-11T11:53:27: Node.js v20.19.4
2025-09-11T11:58:39: node:events:502
2025-09-11T11:58:39:       throw er; // Unhandled 'error' event
2025-09-11T11:58:39:       ^
2025-09-11T11:58:39: 
2025-09-11T11:58:39: Error: Socket timeout
2025-09-11T11:58:39:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T11:58:39:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:58:39:     at Socket._onTimeout (node:net:595:8)
2025-09-11T11:58:39:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T11:58:39:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T11:58:39: Emitted 'error' event on ImapFlow instance at:
2025-09-11T11:58:39:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T11:58:39:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T11:58:39:     at TLSSocket.emit (node:events:524:28)
2025-09-11T11:58:39:     [... lines matching original stack trace ...]
2025-09-11T11:58:39:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T11:58:39:   code: 'ETIMEOUT',
2025-09-11T11:58:39:   _connId: '12p0mx2wymiezah2snr8'
2025-09-11T11:58:39: }
2025-09-11T11:58:39: 
2025-09-11T11:58:39: Node.js v20.19.4
2025-09-11T12:03:50: node:events:502
2025-09-11T12:03:50:       throw er; // Unhandled 'error' event
2025-09-11T12:03:50:       ^
2025-09-11T12:03:50: 
2025-09-11T12:03:50: Error: Socket timeout
2025-09-11T12:03:50:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T12:03:50:     at TLSSocket.emit (node:events:524:28)
2025-09-11T12:03:50:     at Socket._onTimeout (node:net:595:8)
2025-09-11T12:03:50:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T12:03:50:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T12:03:50: Emitted 'error' event on ImapFlow instance at:
2025-09-11T12:03:50:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T12:03:50:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T12:03:50:     at TLSSocket.emit (node:events:524:28)
2025-09-11T12:03:50:     [... lines matching original stack trace ...]
2025-09-11T12:03:50:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T12:03:50:   code: 'ETIMEOUT',
2025-09-11T12:03:50:   _connId: 'c704xeiiemk0q0jfuiz8'
2025-09-11T12:03:50: }
2025-09-11T12:03:50: 
2025-09-11T12:03:50: Node.js v20.19.4
2025-09-11T12:09:01: node:events:502
2025-09-11T12:09:01:       throw er; // Unhandled 'error' event
2025-09-11T12:09:01:       ^
2025-09-11T12:09:01: 
2025-09-11T12:09:01: Error: Socket timeout
2025-09-11T12:09:01:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T12:09:01:     at TLSSocket.emit (node:events:524:28)
2025-09-11T12:09:01:     at Socket._onTimeout (node:net:595:8)
2025-09-11T12:09:01:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T12:09:01:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T12:09:01: Emitted 'error' event on ImapFlow instance at:
2025-09-11T12:09:01:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T12:09:01:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T12:09:01:     at TLSSocket.emit (node:events:524:28)
2025-09-11T12:09:01:     [... lines matching original stack trace ...]
2025-09-11T12:09:01:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T12:09:01:   code: 'ETIMEOUT',
2025-09-11T12:09:01:   _connId: '1ifh3xx3522wzsc52y1z'
2025-09-11T12:09:01: }
2025-09-11T12:09:01: 
2025-09-11T12:09:01: Node.js v20.19.4
2025-09-11T12:14:13: node:events:502
2025-09-11T12:14:13:       throw er; // Unhandled 'error' event
2025-09-11T12:14:13:       ^
2025-09-11T12:14:13: 
2025-09-11T12:14:13: Error: Socket timeout
2025-09-11T12:14:13:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T12:14:13:     at TLSSocket.emit (node:events:524:28)
2025-09-11T12:14:13:     at Socket._onTimeout (node:net:595:8)
2025-09-11T12:14:13:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T12:14:13:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T12:14:13: Emitted 'error' event on ImapFlow instance at:
2025-09-11T12:14:13:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T12:14:13:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T12:14:13:     at TLSSocket.emit (node:events:524:28)
2025-09-11T12:14:13:     [... lines matching original stack trace ...]
2025-09-11T12:14:13:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T12:14:13:   code: 'ETIMEOUT',
2025-09-11T12:14:13:   _connId: 'jtp7wnfoynci1s1alyf4'
2025-09-11T12:14:13: }
2025-09-11T12:14:13: 
2025-09-11T12:14:13: Node.js v20.19.4
2025-09-11T12:19:24: node:events:502
2025-09-11T12:19:24:       throw er; // Unhandled 'error' event
2025-09-11T12:19:24:       ^
2025-09-11T12:19:24: 
2025-09-11T12:19:24: Error: Socket timeout
2025-09-11T12:19:24:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T12:19:24:     at TLSSocket.emit (node:events:524:28)
2025-09-11T12:19:24:     at Socket._onTimeout (node:net:595:8)
2025-09-11T12:19:24:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T12:19:24:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T12:19:24: Emitted 'error' event on ImapFlow instance at:
2025-09-11T12:19:24:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T12:19:24:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T12:19:24:     at TLSSocket.emit (node:events:524:28)
2025-09-11T12:19:24:     [... lines matching original stack trace ...]
2025-09-11T12:19:24:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T12:19:24:   code: 'ETIMEOUT',
2025-09-11T12:19:24:   _connId: '127dthgvpjclqd6jq977'
2025-09-11T12:19:24: }
2025-09-11T12:19:24: 
2025-09-11T12:19:24: Node.js v20.19.4
2025-09-11T12:24:35: node:events:502
2025-09-11T12:24:35:       throw er; // Unhandled 'error' event
2025-09-11T12:24:35:       ^
2025-09-11T12:24:35: 
2025-09-11T12:24:35: Error: Socket timeout
2025-09-11T12:24:35:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T12:24:35:     at TLSSocket.emit (node:events:524:28)
2025-09-11T12:24:35:     at Socket._onTimeout (node:net:595:8)
2025-09-11T12:24:35:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T12:24:35:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T12:24:35: Emitted 'error' event on ImapFlow instance at:
2025-09-11T12:24:35:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T12:24:35:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T12:24:35:     at TLSSocket.emit (node:events:524:28)
2025-09-11T12:24:35:     [... lines matching original stack trace ...]
2025-09-11T12:24:35:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T12:24:35:   code: 'ETIMEOUT',
2025-09-11T12:24:35:   _connId: 'ngn6z7v94zt93tt5owvd'
2025-09-11T12:24:35: }
2025-09-11T12:24:35: 
2025-09-11T12:24:35: Node.js v20.19.4
2025-09-11T12:29:47: node:events:502
2025-09-11T12:29:47:       throw er; // Unhandled 'error' event
2025-09-11T12:29:47:       ^
2025-09-11T12:29:47: 
2025-09-11T12:29:47: Error: Socket timeout
2025-09-11T12:29:47:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:789:29)
2025-09-11T12:29:47:     at TLSSocket.emit (node:events:524:28)
2025-09-11T12:29:47:     at Socket._onTimeout (node:net:595:8)
2025-09-11T12:29:47:     at listOnTimeout (node:internal/timers:581:17)
2025-09-11T12:29:47:     at process.processTimers (node:internal/timers:519:7)
2025-09-11T12:29:47: Emitted 'error' event on ImapFlow instance at:
2025-09-11T12:29:47:     at ImapFlow.emitError (/app/node_modules/imapflow/lib/imap-flow.js:391:14)
2025-09-11T12:29:47:     at TLSSocket._socketTimeout (/app/node_modules/imapflow/lib/imap-flow.js:804:26)
2025-09-11T12:29:47:     at TLSSocket.emit (node:events:524:28)
2025-09-11T12:29:47:     [... lines matching original stack trace ...]
2025-09-11T12:29:47:     at process.processTimers (node:internal/timers:519:7) {
2025-09-11T12:29:47:   code: 'ETIMEOUT',
2025-09-11T12:29:47:   _connId: '3s9mu7kvoiqyxi84puxu'
2025-09-11T12:29:47: }
2025-09-11T12:29:47: 
2025-09-11T12:29:47: Node.js v20.19.4
2025-09-11T12:32:01: Erro ao buscar conteúdo do email: Error: Connection not available
2025-09-11T12:32:01:     at ImapFlow.close (/app/node_modules/imapflow/lib/imap-flow.js:1708:39)
2025-09-11T12:32:01:     at TLSSocket._socketEnd (/app/node_modules/imapflow/lib/imap-flow.js:776:58)
2025-09-11T12:32:01:     at Object.onceWrapper (node:events:638:28)
2025-09-11T12:32:01:     at TLSSocket.emit (node:events:536:35)
2025-09-11T12:32:01:     at endReadableNT (node:internal/streams/readable:1698:12)
2025-09-11T12:32:01:     at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
2025-09-11T12:32:01:   code: 'NoConnection'
2025-09-11T12:32:01: }
2025-09-11T12:32:01: Erro ao processar email <CAB+DkvFZHhKmUxxd-1uV62i7q9BhH7A25rHQ=Ryv3nS7o4+J1A@mail.gmail.com>: PrismaClientValidationError: 
2025-09-11T12:32:01: Invalid `db.helpdeskTicket.create()` invocation in
2025-09-11T12:32:01: /app/src/lib/helpdesk/imap-monitor.ts:386:44
2025-09-11T12:32:01: 
2025-09-11T12:32:01:   383 });
2025-09-11T12:32:01:   384 
2025-09-11T12:32:01:   385 // Criar ticket com dados parseados
2025-09-11T12:32:01: → 386 const ticket = await db.helpdeskTicket.create({
2025-09-11T12:32:01:         data: {
2025-09-11T12:32:01:           numero: 2025002,
2025-09-11T12:32:01:           assunto: "Chamado 1",
2025-09-11T12:32:01:           descricao: "Email sem conteúdo",
2025-09-11T12:32:01:           prioridade: "MEDIA",
2025-09-11T12:32:01:           categoria: undefined,
2025-09-11T12:32:01:           tags: "email",
2025-09-11T12:32:01:           ~~~~
2025-09-11T12:32:01:           solicitanteNome: "Ronaldo Davi",
2025-09-11T12:32:01:           solicitanteEmail: "ronaldodavi@gmail.com",
2025-09-11T12:32:01:           emailMessageId: "<CAB+DkvFZHhKmUxxd-1uV62i7q9BhH7A25rHQ=Ryv3nS7o4+J1A@mail.gmail.com>",
2025-09-11T12:32:01:           emailUid: 1,
2025-09-11T12:32:01:           departamentoId: "cmfee6p230001o0of71xpsksd",
2025-09-11T12:32:01:           clienteId: undefined,
2025-09-11T12:32:01:           dataAbertura: new Date("2025-09-11T15:32:01.279Z"),
2025-09-11T12:32:01:           dataUltimaResposta: new Date("2025-09-11T15:32:01.279Z"),
2025-09-11T12:32:01:       ?   id?: String,
2025-09-11T12:32:01:       ?   status?: HelpdeskStatus,
2025-09-11T12:32:01:       ?   solicitanteTelefone?: String | Null,
2025-09-11T12:32:01:       ?   dataFechamento?: DateTime | Null,
2025-09-11T12:32:01:       ?   createdAt?: DateTime,
2025-09-11T12:32:01:       ?   updatedAt?: DateTime,
2025-09-11T12:32:01:       ?   responsavelId?: String | Null,
2025-09-11T12:32:01:       ?   mensagens?: HelpdeskMensagemUncheckedCreateNestedManyWithoutTicketInput
2025-09-11T12:32:01:         }
2025-09-11T12:32:01:       })
2025-09-11T12:32:01: 
2025-09-11T12:32:01: Unknown argument `tags`. Did you mean `status`? Available options are marked with ?.
2025-09-11T12:32:01:     at throwValidationException (/app/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)
2025-09-11T12:32:01:     at ei.handleRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)
2025-09-11T12:32:01:     at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)
2025-09-11T12:32:01:     at ei.request (/app/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)
2025-09-11T12:32:01:     at async a (/app/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:833:24)
2025-09-11T12:32:01:     at async HelpdeskImapMonitor.createTicket (/app/src/lib/helpdesk/imap-monitor.ts:386:20)
2025-09-11T12:32:01:     at async HelpdeskImapMonitor.processNewEmail (/app/src/lib/helpdesk/imap-monitor.ts:243:22)
2025-09-11T12:32:01:     at async HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:202:13)
2025-09-11T12:32:01:     at async HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:22)
2025-09-11T12:32:01:     at async TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:26) {
2025-09-11T12:32:01:   clientVersion: '6.15.0'
2025-09-11T12:32:01: }
2025-09-11T12:32:01: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T12:32:01:     at ImapFlow.close (/app/node_modules/imapflow/lib/imap-flow.js:1694:35)
2025-09-11T12:32:01:     at TLSSocket._socketEnd (/app/node_modules/imapflow/lib/imap-flow.js:776:58)
2025-09-11T12:32:01:     at Object.onceWrapper (node:events:638:28)
2025-09-11T12:32:01:     at TLSSocket.emit (node:events:536:35)
2025-09-11T12:32:01:     at endReadableNT (node:internal/streams/readable:1698:12)
2025-09-11T12:32:01:     at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
2025-09-11T12:32:01:   code: 'NoConnection'
2025-09-11T12:32:01: }
2025-09-11T12:32:01: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T12:32:01:     at ImapFlow.close (/app/node_modules/imapflow/lib/imap-flow.js:1694:35)
2025-09-11T12:32:01:     at TLSSocket._socketEnd (/app/node_modules/imapflow/lib/imap-flow.js:776:58)
2025-09-11T12:32:01:     at Object.onceWrapper (node:events:638:28)
2025-09-11T12:32:01:     at TLSSocket.emit (node:events:536:35)
2025-09-11T12:32:01:     at endReadableNT (node:internal/streams/readable:1698:12)
2025-09-11T12:32:01:     at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
2025-09-11T12:32:01:   code: 'NoConnection'
2025-09-11T12:32:01: }
2025-09-11T12:34:52: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T12:34:52:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T12:34:52:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T12:34:52:     at new Promise (<anonymous>)
2025-09-11T12:34:52:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T12:34:52:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T12:34:52:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T12:34:52:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T12:34:52:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T12:34:52:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T12:34:52:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T12:34:52:   code: 'NoConnection'
2025-09-11T12:34:52: }
2025-09-11T12:34:52: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T12:34:52:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T12:34:52:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T12:34:52:     at new Promise (<anonymous>)
2025-09-11T12:34:52:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T12:34:52:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T12:34:52:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T12:34:52:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T12:34:52:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T12:34:52:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T12:34:52:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T12:34:52:   code: 'NoConnection'
2025-09-11T12:34:52: }
2025-09-11T12:39:52: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T12:39:52:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T12:39:52:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T12:39:52:     at new Promise (<anonymous>)
2025-09-11T12:39:52:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T12:39:52:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T12:39:52:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T12:39:52:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T12:39:52:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T12:39:52:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T12:39:52:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T12:39:52:   code: 'NoConnection'
2025-09-11T12:39:52: }
2025-09-11T12:39:52: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T12:39:52:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T12:39:52:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T12:39:52:     at new Promise (<anonymous>)
2025-09-11T12:39:52:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T12:39:52:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T12:39:52:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T12:39:52:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T12:39:52:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T12:39:52:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T12:39:52:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T12:39:52:   code: 'NoConnection'
2025-09-11T12:39:52: }
2025-09-11T12:44:52: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T12:44:52:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T12:44:52:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T12:44:52:     at new Promise (<anonymous>)
2025-09-11T12:44:52:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T12:44:52:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T12:44:52:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T12:44:52:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T12:44:52:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T12:44:52:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T12:44:52:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T12:44:52:   code: 'NoConnection'
2025-09-11T12:44:52: }
2025-09-11T12:44:52: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T12:44:52:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T12:44:52:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T12:44:52:     at new Promise (<anonymous>)
2025-09-11T12:44:52:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T12:44:52:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T12:44:52:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T12:44:52:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T12:44:52:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T12:44:52:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T12:44:52:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T12:44:52:   code: 'NoConnection'
2025-09-11T12:44:52: }
2025-09-11T12:49:53: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T12:49:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T12:49:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T12:49:53:     at new Promise (<anonymous>)
2025-09-11T12:49:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T12:49:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T12:49:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T12:49:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T12:49:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T12:49:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T12:49:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T12:49:53:   code: 'NoConnection'
2025-09-11T12:49:53: }
2025-09-11T12:49:53: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T12:49:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T12:49:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T12:49:53:     at new Promise (<anonymous>)
2025-09-11T12:49:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T12:49:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T12:49:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T12:49:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T12:49:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T12:49:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T12:49:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T12:49:53:   code: 'NoConnection'
2025-09-11T12:49:53: }
2025-09-11T12:54:53: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T12:54:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T12:54:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T12:54:53:     at new Promise (<anonymous>)
2025-09-11T12:54:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T12:54:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T12:54:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T12:54:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T12:54:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T12:54:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T12:54:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T12:54:53:   code: 'NoConnection'
2025-09-11T12:54:53: }
2025-09-11T12:54:53: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T12:54:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T12:54:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T12:54:53:     at new Promise (<anonymous>)
2025-09-11T12:54:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T12:54:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T12:54:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T12:54:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T12:54:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T12:54:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T12:54:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T12:54:53:   code: 'NoConnection'
2025-09-11T12:54:53: }
2025-09-11T12:59:53: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T12:59:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T12:59:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T12:59:53:     at new Promise (<anonymous>)
2025-09-11T12:59:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T12:59:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T12:59:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T12:59:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T12:59:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T12:59:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T12:59:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T12:59:53:   code: 'NoConnection'
2025-09-11T12:59:53: }
2025-09-11T12:59:53: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T12:59:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T12:59:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T12:59:53:     at new Promise (<anonymous>)
2025-09-11T12:59:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T12:59:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T12:59:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T12:59:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T12:59:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T12:59:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T12:59:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T12:59:53:   code: 'NoConnection'
2025-09-11T12:59:53: }
2025-09-11T13:04:53: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T13:04:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:04:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:04:53:     at new Promise (<anonymous>)
2025-09-11T13:04:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:04:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:04:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:04:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:04:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:04:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:04:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:04:53:   code: 'NoConnection'
2025-09-11T13:04:53: }
2025-09-11T13:04:53: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T13:04:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:04:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:04:53:     at new Promise (<anonymous>)
2025-09-11T13:04:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:04:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:04:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:04:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:04:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:04:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:04:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:04:53:   code: 'NoConnection'
2025-09-11T13:04:53: }
2025-09-11T13:09:53: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T13:09:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:09:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:09:53:     at new Promise (<anonymous>)
2025-09-11T13:09:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:09:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:09:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:09:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:09:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:09:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:09:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:09:53:   code: 'NoConnection'
2025-09-11T13:09:53: }
2025-09-11T13:09:53: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T13:09:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:09:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:09:53:     at new Promise (<anonymous>)
2025-09-11T13:09:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:09:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:09:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:09:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:09:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:09:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:09:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:09:53:   code: 'NoConnection'
2025-09-11T13:09:53: }
2025-09-11T13:14:53: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T13:14:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:14:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:14:53:     at new Promise (<anonymous>)
2025-09-11T13:14:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:14:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:14:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:14:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:14:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:14:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:14:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:14:53:   code: 'NoConnection'
2025-09-11T13:14:53: }
2025-09-11T13:14:53: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T13:14:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:14:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:14:53:     at new Promise (<anonymous>)
2025-09-11T13:14:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:14:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:14:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:14:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:14:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:14:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:14:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:14:53:   code: 'NoConnection'
2025-09-11T13:14:53: }
2025-09-11T13:19:53: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T13:19:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:19:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:19:53:     at new Promise (<anonymous>)
2025-09-11T13:19:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:19:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:19:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:19:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:19:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:19:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:19:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:19:53:   code: 'NoConnection'
2025-09-11T13:19:53: }
2025-09-11T13:19:53: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T13:19:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:19:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:19:53:     at new Promise (<anonymous>)
2025-09-11T13:19:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:19:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:19:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:19:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:19:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:19:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:19:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:19:53:   code: 'NoConnection'
2025-09-11T13:19:53: }
2025-09-11T13:24:53: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T13:24:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:24:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:24:53:     at new Promise (<anonymous>)
2025-09-11T13:24:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:24:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:24:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:24:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:24:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:24:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:24:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:24:53:   code: 'NoConnection'
2025-09-11T13:24:53: }
2025-09-11T13:24:53: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T13:24:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:24:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:24:53:     at new Promise (<anonymous>)
2025-09-11T13:24:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:24:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:24:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:24:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:24:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:24:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:24:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:24:53:   code: 'NoConnection'
2025-09-11T13:24:53: }
2025-09-11T13:29:53: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T13:29:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:29:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:29:53:     at new Promise (<anonymous>)
2025-09-11T13:29:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:29:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:29:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:29:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:29:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:29:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:29:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:29:53:   code: 'NoConnection'
2025-09-11T13:29:53: }
2025-09-11T13:29:53: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T13:29:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:29:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:29:53:     at new Promise (<anonymous>)
2025-09-11T13:29:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:29:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:29:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:29:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:29:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:29:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:29:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:29:53:   code: 'NoConnection'
2025-09-11T13:29:53: }
2025-09-11T13:34:53: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T13:34:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:34:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:34:53:     at new Promise (<anonymous>)
2025-09-11T13:34:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:34:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:34:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:34:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:34:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:34:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:34:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:34:53:   code: 'NoConnection'
2025-09-11T13:34:53: }
2025-09-11T13:34:53: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T13:34:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:34:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:34:53:     at new Promise (<anonymous>)
2025-09-11T13:34:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:34:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:34:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:34:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:34:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:34:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:34:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:34:53:   code: 'NoConnection'
2025-09-11T13:34:53: }
2025-09-11T13:39:53: Erro ao sincronizar emails para Suporte ti: Error: Connection not available
2025-09-11T13:39:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:39:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:39:53:     at new Promise (<anonymous>)
2025-09-11T13:39:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:39:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:39:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:39:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:39:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:39:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:39:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:39:53:   code: 'NoConnection'
2025-09-11T13:39:53: }
2025-09-11T13:39:53: ❌ Erro na sincronização de emails para Suporte ti: Error: Connection not available
2025-09-11T13:39:53:     at ImapFlow.processLocks (/app/node_modules/imapflow/lib/imap-flow.js:3300:33)
2025-09-11T13:39:53:     at /app/node_modules/imapflow/lib/imap-flow.js:3412:18
2025-09-11T13:39:53:     at new Promise (<anonymous>)
2025-09-11T13:39:53:     at ImapFlow.getMailboxLock (/app/node_modules/imapflow/lib/imap-flow.js:3410:22)
2025-09-11T13:39:53:     at HelpdeskImapMonitor.syncNewEmails (/app/src/lib/helpdesk/imap-monitor.ts:185:38)
2025-09-11T13:39:53:     at HelpdeskImapMonitor.synchronizeEmails (/app/src/lib/helpdesk/imap-monitor.ts:111:33)
2025-09-11T13:39:53:     at TicketAutomationService.checkDepartmentEmails (/app/src/lib/helpdesk/ticket-automation-service.ts:268:40)
2025-09-11T13:39:53:     at TicketAutomationService.checkAllDepartments (/app/src/lib/helpdesk/ticket-automation-service.ts:223:35)
2025-09-11T13:39:53:     at Timeout._onTimeout (/app/src/lib/helpdesk/ticket-automation-service.ts:191:18)
2025-09-11T13:39:53:     at listOnTimeout (node:internal/timers:581:17) {
2025-09-11T13:39:53:   code: 'NoConnection'
2025-09-11T13:39:53: }
2025-09-11T13:42:52: Erro ao desconectar IMAP: Error: Connection not available
2025-09-11T13:42:52:     at ImapFlow.run (/app/node_modules/imapflow/lib/imap-flow.js:3216:27)
2025-09-11T13:42:52:     at ImapFlow.logout (/app/node_modules/imapflow/lib/imap-flow.js:1642:27)
2025-09-11T13:42:52:     at HelpdeskImapMonitor.stopMonitoring (/app/src/lib/helpdesk/imap-monitor.ts:92:27)
2025-09-11T13:42:52:     at TicketAutomationService.stop (/app/src/lib/helpdesk/ticket-automation-service.ts:105:23)
2025-09-11T13:42:52:     at shutdown (/app/src/scripts/start-ticket-automation.ts:87:35)
2025-09-11T13:42:52:     at process.<anonymous> (/app/src/scripts/start-ticket-automation.ts:45:13)
2025-09-11T13:42:52:     at process.emit (node:events:536:35)
2025-09-11T13:42:52:     at process.emit (/app/node_modules/tsx/dist/suppress-warnings.cjs:1:472) {
2025-09-11T13:42:52:   code: 'NoConnection'
2025-09-11T13:42:52: }
